# Bolt Rules for OpenEMR

> **ðŸ“– For general OpenEMR project information, see [AI_INSTRUCTIONS.md](AI_INSTRUCTIONS.md)**
>
> This file contains Bolt-specific configuration and behaviors.

## Bolt-Specific Behaviors

### Web-Based Development
- Leverage Bolt's browser-based development environment for rapid prototyping
- Use Bolt's instant preview capabilities for UI components and interfaces
- Take advantage of Bolt's real-time collaboration features when working with teams

### Code Generation
- When generating code with Bolt, mark sections with:
```php
/*
 * BEGIN AI-GENERATED CODE - Bolt
 * The following code section was generated by Bolt AI
 */
// AI-generated code here
/*
 * END AI-GENERATED CODE - Bolt
 */
```

- For single lines:
```php
$result = processData($input); // AI-generated line - Bolt
```

### File Creation Guidelines
- Use Bolt's understanding of web application patterns for new OpenEMR components
- Follow existing file patterns in the target directory
- Prefer extending existing files over creating new ones
- Leverage Bolt's template generation capabilities

### Development Workflow
- Use Bolt's integrated development environment for seamless coding
- Leverage Bolt's built-in package management and dependency handling
- Take advantage of Bolt's instant deployment and testing capabilities
- Use Bolt's debugging tools for troubleshooting issues

### Frontend Development
- Utilize Bolt's frontend framework expertise for modern JavaScript components
- Leverage Bolt's CSS and styling capabilities for theme development
- Use Bolt's responsive design suggestions for mobile compatibility
- Take advantage of Bolt's accessibility recommendations

### OpenEMR-Specific Optimizations
- Use Bolt's web application security best practices for healthcare compliance
- Leverage Bolt's database integration patterns for efficient data handling
- Apply Bolt's performance optimization suggestions for large-scale applications
