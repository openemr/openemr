name: Deploy OpenEMR to EC2

on:
  push:
    branches:
      - production
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
  DEPLOY_PATH: /var/www/html

jobs:
  deploy:
    name: Deploy to EC2 Ubuntu 24.04
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to EC2 via SSM
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --instance-ids "${{ env.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=[
              "set -e",
              "echo \"Starting deployment...\"",
              "cd ${{ env.DEPLOY_PATH }}",
              "echo \"Stopping Apache...\"",
              "sudo systemctl stop apache2 || true",
              "echo \"Pulling latest changes from production branch...\"",
              "git fetch origin",
              "git checkout production",
              "git pull origin production",
              "echo \"Installing Composer dependencies...\"",
              "composer install --no-dev --optimize-autoloader",
              "composer dump-autoload -o",
              "echo \"Installing NPM dependencies...\"",
              "npm install",
              "echo \"Building frontend assets...\"",
              "npm run build",
              "echo \"Setting permissions...\"",
              "sudo chown -R www-data:www-data ${{ env.DEPLOY_PATH }}",
              "sudo chmod -R 755 ${{ env.DEPLOY_PATH }}",
              "echo \"Starting Apache...\"",
              "sudo systemctl start apache2",
              "echo \"Deployment completed successfully!\""
            ]' \
            --region "${{ env.AWS_REGION }}" \
            --query 'Command.CommandId' \
            --output text)
          
          echo "Command ID: $COMMAND_ID"
          echo "COMMAND_ID=$COMMAND_ID" >> $GITHUB_ENV
          echo "Waiting for command to complete..."
          
          aws ssm wait command-executed \
            --command-id "$COMMAND_ID" \
            --instance-id "${{ env.EC2_INSTANCE_ID }}" \
            --region "${{ env.AWS_REGION }}"

      - name: Get deployment output
        run: |
          echo "Deployment output:"
          aws ssm get-command-invocation \
            --command-id "${{ env.COMMAND_ID }}" \
            --instance-id "${{ env.EC2_INSTANCE_ID }}" \
            --region "${{ env.AWS_REGION }}" \
            --query 'StandardOutputContent' \
            --output text

      - name: Check for deployment errors
        if: failure()
        run: |
          echo "Deployment errors:"
          aws ssm get-command-invocation \
            --command-id "${{ env.COMMAND_ID }}" \
            --instance-id "${{ env.EC2_INSTANCE_ID }}" \
            --region "${{ env.AWS_REGION }}" \
            --query 'StandardErrorContent' \
            --output text

      - name: Connect via SSM (manual step info)
        if: failure()
        run: |
          echo "Deployment failed. To troubleshoot via SSM, run:"
          echo "aws ssm start-session --target ${{ env.EC2_INSTANCE_ID }} --region ${{ env.AWS_REGION }}"
