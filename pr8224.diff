diff --git a/contrib/util/ccda_import/batchImport.php b/contrib/util/ccda_import/batchImport.php
new file mode 100644
index 00000000000..f775072919a
--- /dev/null
+++ b/contrib/util/ccda_import/batchImport.php
@@ -0,0 +1,188 @@
+<?php
+
+/**
+ * Webpage wrapper for batch import of ccda documents.
+ *
+ * @package   OpenEMR
+ * @link      https://www.open-emr.org
+ * @author    Jerry Padgett <sjpadgett@gmail.com>
+ * @copyright Copyright (c) 2025 Jerry Padgett <sjpadgett@gmail.com>
+ * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
+ */
+
+require_once("../../../interface/globals.php");
+
+use OpenEMR\Core\Header;
+
+// Define default values.
+$sourcePath_default = $GLOBALS['OE_SITE_DIR'] . '/documents/import_ccdas';
+$openemrPath_default = $_SERVER["DOCUMENT_ROOT"] ?? '';
+$site_default = $_SESSION['site_id'] ?? 'default';
+$isDev_default = 'false';
+$enableMoves_default = 'false';
+$dedup_default = 'true';
+
+// Set form value variables.
+$sourcePath_val = isset($_POST['sourcePath']) ? trim($_POST['sourcePath']) : $sourcePath_default;
+$openemrPath_val = isset($_POST['openemrPath']) ? trim($_POST['openemrPath']) : $openemrPath_default;
+$site_val = isset($_POST['site']) ? trim($_POST['site']) : $site_default;
+$isDev_val = isset($_POST['isDev']) ? trim($_POST['isDev']) : $isDev_default;
+$enableMoves_val = isset($_POST['enableMoves']) ? trim($_POST['enableMoves']) : $enableMoves_default;
+$dedup_val = isset($_POST['dedup']) ? trim($_POST['dedup']) : $dedup_default;
+
+ob_implicit_flush(true);
+?>
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <meta charset="UTF-8">
+    <?php Header::setupHeader(); ?>
+    <title><?php echo xlt('CCDA Batch Import'); ?></title>
+    <script>
+        function scrollToBottom() {
+            setTimeout(() => {
+                window.scrollTo({top: document.body.scrollHeight, behavior: 'smooth'});
+            }, 0);
+        }
+    </script>
+</head>
+<body>
+    <div class="container mt-5">
+        <h1 class="mb-1"><?php echo xlt('Batch Import CCDAs'); ?></h1>
+        <div class="col-12">
+            <label><?php echo xlt('This tool allows you to batch import CCDAs into OpenEMR.'); ?></label><br />
+            <label><?php echo xlt('Please ensure that the source path contains the CCDAs to be imported.'); ?></label><br />
+            <label><?php echo xlt('The OpenEMR path is where OpenEMR is installed.'); ?></label><br />
+            <p>
+                <?php
+                echo "<h5>Usage: php import_ccda.php [OPTIONS]</h5>";
+                echo "Options:<br />";
+                echo "  --authName      Required if isDev=false. userAuth so Documents can be saved/moved.<br />";
+                echo "  --sourcePath     Required. Path to the directory containing CCDA files to import.<br />";
+                echo "  --site           Required. OpenEMR site ID.<br />";
+                echo "  --openemrPath    Required. Path to OpenEMR web root.<br />";
+                echo "  --isDev          Optional. Set to 'true' for development mode, 'false' for production. Default: true.<br />";
+                echo "  --enableMoves    Optional. Set to 'true' to move processed files, 'false' to disable. Default: false.<br />";
+                echo "  --dedup          Optional. Set to 'true' to enable duplicate checking, 'false' to disable. Default: false.<br />";
+                echo "  --help           Show this help message.<br />";
+                ?>
+            </p><br />
+        </div>
+        <div class="col-12">
+            <form id="importForm" method="post" onload="scrollToBottom()">
+                <div class="form-group">
+                    <label for="sourcePath">Source Path:</label>
+                    <input type="text" class="form-control" id="sourcePath" name="sourcePath"
+                        value="<?php echo attr($sourcePath_val); ?>"
+                        placeholder="/path/to/import/documents" required>
+                </div>
+                <div class="form-group">
+                    <label for="openemrPath">OpenEMR Path:</label>
+                    <input type="text" class="form-control" id="openemrPath" name="openemrPath"
+                        value="<?php echo attr($openemrPath_val); ?>"
+                        placeholder="/var/www/openemr" required>
+                </div>
+                <div class="form-group">
+                    <label for="site">Site:</label>
+                    <input type="text" class="form-control" id="site" name="site"
+                        value="<?php echo attr($site_val); ?>"
+                        placeholder="default" required>
+                </div>
+                <div class="form-group">
+                    <label for="isDev">Development Mode (true/false):</label>
+                    <select class="form-control" id="isDev" name="isDev">
+                        <option value="true" <?php echo ($isDev_val === 'true') ? 'selected' : ''; ?>>True</option>
+                        <option value="false" <?php echo ($isDev_val === 'false') ? 'selected' : ''; ?>>False</option>
+                    </select>
+                </div>
+                <div class="form-group">
+                    <label for="enableMoves">Enable Moves (true/false):</label>
+                    <select class="form-control" id="enableMoves" name="enableMoves">
+                        <option value="false" <?php echo ($enableMoves_val === 'false') ? 'selected' : ''; ?>>False</option>
+                        <option value="true" <?php echo ($enableMoves_val === 'true') ? 'selected' : ''; ?>>True</option>
+                    </select>
+                </div>
+                <div class="form-group">
+                    <label for="dedup">Dedup (true/false):</label>
+                    <select class="form-control" id="dedup" name="dedup">
+                        <option value="false" <?php echo ($dedup_val === 'false') ? 'selected' : ''; ?>>False</option>
+                        <option value="true" <?php echo ($dedup_val === 'true') ? 'selected' : ''; ?>>True</option>
+                    </select>
+                </div>
+                <button type="submit" class="btn btn-primary mb-4" id="submit-form" name="submit" value="start">
+                    <?php echo xlt('Start Import'); ?>
+                </button>
+                <button type="button" class="btn btn-warning mb-4" id="reload-form" value="start" onclick="location.replace('batchImport.php');">
+                    <?php echo xlt('Reload Form'); ?>
+                </button>
+
+            </form>
+        </div>
+    </div>
+    <div class="container">
+        <?php
+        if (isset($_POST['submit'])) {
+            echo "<script>document.getElementById('submit-form').disabled = true;</script>";
+            // Build the command.
+            $sourcePath = escapeshellarg($sourcePath_val);
+            $processedPath = text(rtrim($sourcePath_val, '/') . "/processed");
+            $site = escapeshellarg($site_val);
+            $openemrPath = escapeshellarg($openemrPath_val);
+            $isDev = escapeshellarg($isDev_val);
+            $enableMoves = escapeshellarg($enableMoves_val);
+            $dedup = escapeshellarg($dedup_val);
+            $authName = escapeshellarg($_SESSION['authUser'] ?? 'admin');
+            $scriptPath = __DIR__ . '/import_ccda.php';
+            $cmd = "php " . escapeshellarg($scriptPath) .
+                " --authName=$authName" .
+                " --sourcePath=$sourcePath" .
+                " --site=$site" .
+                " --openemrPath=$openemrPath" .
+                " --isDev=$isDev" .
+                " --enableMoves=$enableMoves" .
+                " --dedup=$dedup";
+
+            echo "<div class='card mb-4'>";
+            echo "    <div class='card-header'>" . xlt('Command') . "</div>";
+            echo "    <div class='card-body'><pre class='py-4 px-2'>" . text($cmd) . "\n\n" . text("Move Files Directory = ") . $processedPath . "</pre></div>";
+            echo "</div>";
+            echo "<div class='card mt-4'>";
+            echo "   <div class='card-header'>" . xlt('Import Output') . "</div>";
+            echo "   <div class='card-body'><pre class='py-4' id='output'>";
+
+            // Use proc_open instead of popen.
+            $descriptor = [
+                0 => ["pipe", "r"],  // stdin is a pipe that the child will read from
+                1 => ["pipe", "w"],  // stdout is a pipe that the child will write to
+                2 => ["pipe", "w"]   // stderr is a pipe that the child will write to
+            ];
+
+            $process = proc_open($cmd, $descriptor, $pipes);
+
+            if (is_resource($process)) {
+                // Get process status and store the PID in session.
+                $status = proc_get_status($process);
+                $_SESSION['import_pid'] = $status['pid'];
+                echo "<script>console.log('Import process started with PID: " . $status['pid'] . "');</script>";
+                // Read output continuously.
+                while (!feof($pipes[1])) {
+                    $line = fgets($pipes[1]);
+                    if ($line !== false) {
+                        echo text($line);
+                        flush();
+                        ob_flush();
+                        echo "<script>scrollToBottom();</script>";
+                    }
+                }
+                proc_close($process);
+                unset($_SESSION['import_pid']);
+            }
+            echo "</pre></div>";
+            echo "</div>";
+        }
+        ?>
+    </div>
+    <script>scrollToBottom();</script>
+</body>
+</html>
diff --git a/contrib/util/ccda_import/import_ccda.php b/contrib/util/ccda_import/import_ccda.php
index d27293fbf07..859df9ad4b1 100644
--- a/contrib/util/ccda_import/import_ccda.php
+++ b/contrib/util/ccda_import/import_ccda.php
@@ -37,7 +37,7 @@
  */
 
 // comment this out when using this script (and then uncomment it again when done using script)
-exit;
+//exit;
 
 // only allow use from command line
 if (php_sapi_name() !== 'cli') {
@@ -65,6 +65,7 @@ function showHelp(): void
     echo "Usage: php import_ccda.php [OPTIONS]\n";
     echo "\n";
     echo "Options:\n";
+    echo "  --authName      Required if isDev=false. userAuth so Documents can be saved/moved.\n";
     echo "  --sourcePath     Required. Path to the directory containing CCDA files to import.\n";
     echo "  --site           Required. OpenEMR site ID.\n";
     echo "  --openemrPath    Required. Path to OpenEMR web root.\n";
@@ -75,6 +76,7 @@ function showHelp(): void
     echo "\n";
     echo "Example:\n";
     echo "  php import_ccda.php --sourcePath=/path/to/import/documents \\\n";
+    echo "                      --authName=admin \\\n";
     echo "                      --site=default \\\n";
     echo "                      --openemrPath=/var/www/openemr \\\n";
     echo "                      --isDev=true \\\n";
@@ -88,7 +90,8 @@ function outputMessage($message): void
 {
     echo("\n");
     echo $message;
-    file_put_contents("log.txt", $message, FILE_APPEND);
+    $file = $GLOBALS['OE_SITE_DIR'] . "/documents/temp/log.txt";
+    file_put_contents($file, $message, FILE_APPEND);
 }
 
 // collect parameters (need to do before globals)
@@ -111,7 +114,9 @@ function outputMessage($message): void
 $seriousOptimizeFlag = filter_var($args['isDev'] ?? true, FILTER_VALIDATE_BOOLEAN); // default to true/on
 $enableMoves = filter_var($args['enableMoves'] ?? false, FILTER_VALIDATE_BOOLEAN); // default to false/off
 $dedup = filter_var($args['dedup'] ?? false, FILTER_VALIDATE_BOOLEAN); // default to false/off
-
+$authName = $args['authName'] ?? '';
+$processedDir = rtrim($args['sourcePath'], '/') . "/processed";
+$duplicateDir = rtrim($args['sourcePath'], '/') . "/duplicates";
 $seriousOptimize = false;
 if ($seriousOptimizeFlag == "true") {
     $seriousOptimize = true;
@@ -123,32 +128,40 @@ function outputMessage($message): void
 use OpenEMR\Common\Uuid\UuidRegistry;
 use OpenEMR\Services\Cda\CdaComponentParseHelpers;
 
+
+// clear the log so we only keep last session. Saves cleanup time.
+unlink($GLOBALS['OE_SITE_DIR'] . "/documents/temp/log.txt");
+
 // show parameters (need to do after globals)
-outputMessage("ccda directory: " . $argv[1]);
-outputMessage("site: " . $_SESSION['site_id']);
-outputMessage("openemr path: " . $openemrPath);
+outputMessage("OpenEMR path: " . $openemrPath);
+outputMessage("CCDA Imports Location: " . $argv[2]);
+outputMessage("Authority: " . $argv[1]);
+outputMessage("Site: " . $_SESSION['site_id']);
 
 if ($seriousOptimize) {
-    outputMessage("development mode is on");
+    outputMessage("Development Mode is ON (performance mode)\n");
     // temporarily disable the audit log
     $auditLogSetting = sqlQueryNoLog("SELECT `gl_value` FROM `globals` WHERE `gl_name` = 'enable_auditlog'")['gl_value'] ?? 0;
     sqlStatementNoLog("UPDATE `globals` SET `gl_value` = 0 WHERE `gl_name` = 'enable_auditlog'");
     $auditLogBreakglassSetting = sqlQueryNoLog("SELECT `gl_value` FROM `globals` WHERE `gl_name` = 'gbl_force_log_breakglass'")['gl_value'] ?? 0;
     sqlStatementNoLog("UPDATE `globals` SET `gl_value` = 0 WHERE `gl_name` = 'gbl_force_log_breakglass'");
 } else {
-    outputMessage("development mode is off");
+    outputMessage("Development Mode is OFF (audit log will be used)\n");
 }
 
-outputMessage("Starting patients import\n");
+outputMessage("Starting patients import.\n");
+
 $counter = 0;
 $millisecondsStart = round(microtime(true) * 1000);
+// iterate through all the files in the directory
 foreach (glob($dir) as $file) {
     if (!is_file($file)) {
         continue;
     }
+    sqlQueryNoLog("truncate audit_master");
+    sqlQueryNoLog("truncate audit_details");
     $patientData = [];
     try {
-        $file = str_replace("'", "\'", $file);
         if ($dedup) {
             $patientData = CdaComponentParseHelpers::parseCcdaPatientRole($file);
             if (empty($patientData)) {
@@ -158,9 +171,10 @@ function outputMessage($message): void
             $duplicates = CdaComponentParseHelpers::checkDuplicatePatient($patientData);
             if (!empty($duplicates)) {
                 if ($enableMoves) {
-                    CdaComponentParseHelpers::moveToDuplicateDir($file, $openemrPath . "/contrib/import_ccdas/duplicates");
+                    CdaComponentParseHelpers::moveToDuplicateDir($file, $duplicateDir);
                 }
-                echo outputMessage("Duplicate patient found and skipped: " . json_encode($duplicates) . "\n");
+                $dups = count(($duplicates ?? []));
+                echo outputMessage("Patient is duplicated " . text($dups) . " times. Patient skipped: " . json_encode($duplicates[0]) . "\n");
                 continue;
             }
         }
@@ -181,22 +195,25 @@ function outputMessage($message): void
         $document->createDocument('00', 13, basename($file), 'text/xml', $fileContents);
         $documentId = $document->get_id();
         //  2. import to ccda table
-        exec("php " . $openemrPath . "/bin/console openemr:ccda-import --site=" . $_SESSION['site_id'] . " --document_id=" . $documentId);
+        exec("php " . $openemrPath . "/bin/console openemr:ccda-import --site=" . $_SESSION['site_id'] . " --document_id=" . $documentId . " --auth_name=" . $authName);
         $auditId = sqlQueryNoLog("SELECT max(`id`) as `maxid` FROM `audit_master`")['maxid'];
         //  3. import as new patient
-        exec("php " . $openemrPath . "/bin/console openemr:ccda-newpatient --site=" . $_SESSION['site_id'] . " --am_id=" . $auditId . " --document_id=" . $documentId);
+        exec("php " . $openemrPath . "/bin/console openemr:ccda-newpatient --site=" . $_SESSION['site_id'] . " --am_id=" . $auditId . " --document_id=" . $documentId . " --auth_name=" . $authName);
     }
     try {
         if ($enableMoves) {
             // move the C-CDA XML to the processed directory
-            CdaComponentParseHelpers::moveToDuplicateDir($file, $openemrPath . "/contrib/import_ccdas/processed");
+            CdaComponentParseHelpers::moveToDuplicateDir($file, $processedDir);
         }
     } catch (Exception $e) {
         outputMessage("Error moving file: " . $e->getMessage() . "\n");
     }
-    echo('.');
+    // Keep alive the notifications
+    echo("System has successfully imported CCDA number: " . text($counter + 1) . "\n"); // don't log it
+    flush();
+    ob_flush();
     $counter++;
-    $incrementCounter = 50; // echo every 50 records imported
+    $incrementCounter = 10; // echo every 10 records imported
     if (($counter % $incrementCounter) == 0) {
         $timeSec = round(((round(microtime(true) * 1000)) - $millisecondsStart) / 1000);
         outputMessage($counter . " patients imported (" . $timeSec . " total seconds) (" . ((isset($lasttimeSec) ? ($timeSec - $lasttimeSec) : $timeSec) / $incrementCounter) . " average seconds per patient for last " . $incrementCounter . " patients)\n");
@@ -213,6 +230,8 @@ function outputMessage($message): void
     echo outputMessage("Completed uuid creation (" . $timeSec . " total seconds; " . $timeSec / 3600 . " total hours)\n");
 }
 
+outputMessage("Finished patients import" . " $counter\n");
+
 if ($seriousOptimize) {
     // reset the audit log to the original value
     sqlStatementNoLog("UPDATE `globals` SET `gl_value` = ? WHERE `gl_name` = 'enable_auditlog'", [$auditLogSetting]);
diff --git a/interface/modules/zend_modules/module/Carecoordination/src/Carecoordination/Model/CarecoordinationTable.php b/interface/modules/zend_modules/module/Carecoordination/src/Carecoordination/Model/CarecoordinationTable.php
index 732ae64c075..2099db3bbf4 100644
--- a/interface/modules/zend_modules/module/Carecoordination/src/Carecoordination/Model/CarecoordinationTable.php
+++ b/interface/modules/zend_modules/module/Carecoordination/src/Carecoordination/Model/CarecoordinationTable.php
@@ -34,6 +34,8 @@
 use OpenEMR\Services\CodeTypesService;
 use Symfony\Component\Console\Style\SymfonyStyle;
 
+use function PHPUnit\Framework\throwException;
+
 class CarecoordinationTable extends AbstractTableGateway
 {
     use CommandLineDebugStylerTrait;
@@ -228,7 +230,7 @@ public function importCore($xml_content, $doc_id = null): void
             $xml_to_array = new XmlExtended();
             $xml = $xml_to_array->fromString($this->conditionedXmlContent);
         } catch (Exception $e) {
-            die($e->getMessage());
+            throw new Exception($e->getMessage());
         }
         // Document various sectional components
         $components = $xml['component']['structuredBody']['component'];
@@ -2322,13 +2324,13 @@ private function resetData()
      * @return string Cleaned XML content.
      * @throws Exception If the input XML is invalid or cannot be parsed.
      */
-    function cleanCcdaXmlContent(string $xmlContent, bool $removeBr = false): string
+    function cleanCcdaXmlContent(string $xmlContent, bool $replaceBr = false): string
     {
         // Handle <br/> tags if required
-        if ($removeBr) {
-            $xmlContent = preg_replace('/<br\s*\/?>/', '', $xmlContent); // Remove <br/>
+        if ($replaceBr) {
+            $xmlContent = preg_replace('/<\/?br\s*\/?>/i', '', $xmlContent);
         } else {
-            $xmlContent = preg_replace('/<br\s*\/?>/', "\n", $xmlContent); // Replace <br/> with newline
+            $xmlContent = preg_replace('/<\/?br\s*\/?>/i', '\n', $xmlContent); // Replace <br/> with newline
         }
         $xmlContent = preg_replace('/\xC2\xA0/', '', $xmlContent);
         $xmlContent = str_replace('Â', '', $xmlContent);
diff --git a/src/Common/Command/CcdaImport.php b/src/Common/Command/CcdaImport.php
index 2ebacc66261..834c1768815 100644
--- a/src/Common/Command/CcdaImport.php
+++ b/src/Common/Command/CcdaImport.php
@@ -33,9 +33,9 @@ protected function configure(): void
                     new InputOption('document_id', null, InputOption::VALUE_REQUIRED, 'Document id that will be imported into the ccda table'),
                     new InputOption('debug', null, InputOption::VALUE_NONE, 'Turns on debug mode.'),
                     new InputOption('site', null, InputOption::VALUE_REQUIRED, 'Name of site', 'default'),
+                    new InputOption('auth_name', null, InputOption::VALUE_REQUIRED, 'Auth from session', ''),
                 ])
-            )
-        ;
+            );
     }
 
     protected function execute(InputInterface $input, OutputInterface $output): int
@@ -44,8 +44,12 @@ protected function execute(InputInterface $input, OutputInterface $output): int
             $output->writeln('document_id parameter is missing (required), so exiting');
             return 2;
         }
+        if (empty($input->getOption('auth_name'))) {
+            $output->writeln('auth_name parameter is missing (required), so exiting');
+            return 2;
+        }
+        $_SESSION['authUser'] = $input->getOption('auth_name');
 
-        $GLOBALS['modules_application']->getServiceManager()->build(CarecoordinationTable::class)->import($input->getOption('document_id'));
         $symfonyStyler = new SymfonyStyle($input, $output);
 
         $careCoordinationTable = $GLOBALS['modules_application']->getServiceManager()->build(CarecoordinationTable::class);
diff --git a/src/Common/Command/CcdaNewpatient.php b/src/Common/Command/CcdaNewpatient.php
index 7acc99527b7..a112d1bbe06 100644
--- a/src/Common/Command/CcdaNewpatient.php
+++ b/src/Common/Command/CcdaNewpatient.php
@@ -34,9 +34,9 @@ protected function configure(): void
                     new InputOption('document_id', null, InputOption::VALUE_REQUIRED, 'The ccda document id that was imported into the audit table'),
                     new InputOption('debug', null, InputOption::VALUE_NONE, 'Turns on debug mode.'),
                     new InputOption('site', null, InputOption::VALUE_REQUIRED, 'Name of site', 'default'),
+                    new InputOption('auth_name', null, InputOption::VALUE_REQUIRED, 'Auth from session', ''),
                 ])
-            )
-        ;
+            );
     }
 
     protected function execute(InputInterface $input, OutputInterface $output): int
@@ -49,10 +49,13 @@ protected function execute(InputInterface $input, OutputInterface $output): int
             $output->writeln('am_id parameter is missing (required), so exiting');
             return 2;
         }
+        if (empty($input->getOption('auth_name'))) {
+            $output->writeln('auth_name parameter is missing (required), so exiting');
+            return 2;
+        }
+        $_SESSION['authUser'] = $input->getOption('auth_name');
 
-        $GLOBALS['modules_application']->getServiceManager()->build(CarecoordinationTable::class)->insert_patient($input->getOption('am_id'), $input->getOption('document_id'));
         $symfonyStyler = new SymfonyStyle($input, $output);
-
         $careCoordinationTable = $GLOBALS['modules_application']->getServiceManager()->build(CarecoordinationTable::class);
         if ($careCoordinationTable instanceof CarecoordinationTable) {
             if ($input->getOption('debug') !== false) {
diff --git a/templates/patient/card/adv_dir.html.twig b/templates/patient/card/adv_dir.html.twig
index c44123e60ce..e3d6151597b 100644
--- a/templates/patient/card/adv_dir.html.twig
+++ b/templates/patient/card/adv_dir.html.twig
@@ -6,7 +6,7 @@
     {% for a in advDirArr %}
         <div class="list-group-item p-1">
             <div class="d-flex w-100 justify-content-between">
-                <a href='{{ webroot|attr }}/controller.php?document&retrieve&patient_id={{ a.pid|attr_url }}document_id={{ a.docID|attr_url }}&as_file=true' onclick='top.restoreSession()'>{{ a.docName|xlDocCategory|text }}</a>
+                <a href='{{ webroot|attr }}/controller.php?document&retrieve&patient_id={{ a.pid|attr_url }}&document_id={{ a.docID|attr_url }}&as_file=true' onclick='top.restoreSession()'>{{ a.docName|xlDocCategory|text }}</a>
                 {{ a.docDate|shortDate|text }}
             </div>
         </div>
