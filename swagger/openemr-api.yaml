openapi: 3.0.0
info:
  title: 'OpenEMR API'
  version: 7.0.4
servers:
  -
    url: /apis/default/
paths:
  /api/facility:
    get:
      tags:
        - standard
      description: 'Returns a single facility.'
      parameters:
        -
          name: name
          in: query
          description: 'The name for the facility.'
          required: false
          schema:
            type: string
        -
          name: facility_npi
          in: query
          description: 'The facility_npi for the facility.'
          required: false
          schema:
            type: string
        -
          name: phone
          in: query
          description: 'The phone for the facility.'
          required: false
          schema:
            type: string
        -
          name: fax
          in: query
          description: 'The fax for the facility.'
          required: false
          schema:
            type: string
        -
          name: street
          in: query
          description: 'The street for the facility.'
          required: false
          schema:
            type: string
        -
          name: city
          in: query
          description: 'The city for the facility.'
          required: false
          schema:
            type: string
        -
          name: state
          in: query
          description: 'The state for the facility.'
          required: false
          schema:
            type: string
        -
          name: postal_code
          in: query
          description: 'The postal_code for the facility.'
          required: false
          schema:
            type: string
        -
          name: country_code
          in: query
          description: 'The country_code for the facility.'
          required: false
          schema:
            type: string
        -
          name: federal_ein
          in: query
          description: 'The federal_ein for the facility.'
          required: false
          schema:
            type: string
        -
          name: website
          in: query
          description: 'The website for the facility.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email for the facility.'
          required: false
          schema:
            type: string
        -
          name: domain_identifier
          in: query
          description: 'The domain_identifier for the facility.'
          required: false
          schema:
            type: string
        -
          name: facility_taxonomy
          in: query
          description: 'The facility_taxonomy for the facility.'
          required: false
          schema:
            type: string
        -
          name: facility_code
          in: query
          description: 'The facility_code for the facility.'
          required: false
          schema:
            type: string
        -
          name: billing_location
          in: query
          description: 'The billing_location setting for the facility.'
          required: false
          schema:
            type: string
        -
          name: accepts_assignment
          in: query
          description: 'The accepts_assignment setting for the facility.'
          required: false
          schema:
            type: string
        -
          name: oid
          in: query
          description: 'The oid for the facility.'
          required: false
          schema:
            type: string
        -
          name: service_location
          in: query
          description: 'The service_location setting for the facility.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Creates a facility in the system'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - facility_npi
              properties:
                name:
                  description: 'The name for the facility.'
                  type: string
                facility_npi:
                  description: 'The facility_npi for the facility.'
                  type: string
                phone:
                  description: 'The phone for the facility.'
                  type: string
                fax:
                  description: 'The fax for the facility.'
                  type: string
                street:
                  description: 'The street for the facility.'
                  type: string
                city:
                  description: 'The city for the facility.'
                  type: string
                state:
                  description: 'The state for the facility.'
                  type: string
                postal_code:
                  description: 'The postal_code for the facility.'
                  type: string
                country_code:
                  description: 'The country_code for the facility.'
                  type: string
                federal_ein:
                  description: 'The federal_ein for the facility.'
                  type: string
                website:
                  description: 'The website for the facility.'
                  type: string
                email:
                  description: 'The email for the facility.'
                  type: string
                domain_identifier:
                  description: 'The domain_identifier for the facility.'
                  type: string
                facility_taxonomy:
                  description: 'The facility_taxonomy for the facility.'
                  type: string
                facility_code:
                  description: 'The facility_code for the facility.'
                  type: string
                billing_location:
                  description: 'The billing_location setting for the facility.'
                  type: string
                accepts_assignment:
                  description: 'The accepts_assignment setting for the facility.'
                  type: string
                oid:
                  description: 'The oid for the facility.'
                  type: string
                service_location:
                  description: 'The service_location setting for the facility.'
                  type: string
              type: object
              example:
                name: Aquaria
                facility_npi: '123456789123'
                phone: 808-606-3030
                fax: 808-606-3031
                street: '1337 Bit Shifter Ln'
                city: 'San Lorenzo'
                state: ZZ
                postal_code: '54321'
                country_code: US
                federal_ein: '4343434'
                website: 'https://example.com'
                email: foo@bar.com
                domain_identifier: ''
                facility_taxonomy: ''
                facility_code: ''
                billing_location: '1'
                accepts_assignment: '1'
                oid: ''
                service_location: '1'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/therapy_groups:
    get:
      tags:
        - standard
      description: 'Retrieves a list of all therapy groups.'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Creates a new therapy group.'
      security:
        -
          openemr_auth: []
  '/api/therapy_groups/:tgid/participants':
    get:
      tags:
        - standard
      description: 'Retrieves a list of all participants in a therapy group.'
      security:
        -
          openemr_auth: []
  '/api/facility/{fuuid}':
    get:
      tags:
        - standard
      description: 'Returns a single facility.'
      parameters:
        -
          name: fuuid
          in: path
          description: 'The uuid for the facility.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Updates a facility in the system'
      parameters:
        -
          name: fuuid
          in: path
          description: 'The uuid for the facility.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: 'The name for the facility.'
                  type: string
                facility_npi:
                  description: 'The facility_npi for the facility.'
                  type: string
                phone:
                  description: 'The phone for the facility.'
                  type: string
                fax:
                  description: 'The fax for the facility.'
                  type: string
                street:
                  description: 'The street for the facility.'
                  type: string
                city:
                  description: 'The city for the facility.'
                  type: string
                state:
                  description: 'The state for the facility.'
                  type: string
                postal_code:
                  description: 'The postal_code for the facility.'
                  type: string
                country_code:
                  description: 'The country_code for the facility.'
                  type: string
                federal_ein:
                  description: 'The federal_ein for the facility.'
                  type: string
                website:
                  description: 'The website for the facility.'
                  type: string
                email:
                  description: 'The email for the facility.'
                  type: string
                domain_identifier:
                  description: 'The domain_identifier for the facility.'
                  type: string
                facility_taxonomy:
                  description: 'The facility_taxonomy for the facility.'
                  type: string
                facility_code:
                  description: 'The facility_code for the facility.'
                  type: string
                billing_location:
                  description: 'The billing_location setting for the facility.'
                  type: string
                accepts_assignment:
                  description: 'The accepts_assignment setting for the facility.'
                  type: string
                oid:
                  description: 'The oid for the facility.'
                  type: string
                service_location:
                  description: 'The service_location setting for the facility.'
                  type: string
              type: object
              example:
                name: Aquaria
                facility_npi: '123456789123'
                phone: 808-606-3030
                fax: 808-606-3031
                street: '1337 Bit Shifter Ln'
                city: 'San Lorenzo'
                state: ZZ
                postal_code: '54321'
                country_code: US
                federal_ein: '4343434'
                website: 'https://example.com'
                email: foo@bar.com
                domain_identifier: ''
                facility_taxonomy: ''
                facility_code: ''
                billing_location: '1'
                accepts_assignment: '1'
                oid: ''
                service_location: '1'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/patient:
    get:
      tags:
        - standard
      description: 'Retrieves a list of patients'
      parameters:
        -
          $ref: '#/components/parameters/_sort'
        -
          name: fname
          in: query
          description: 'The first name for the patient.'
          required: false
          schema:
            type: string
        -
          name: lname
          in: query
          description: 'The last name for the patient.'
          required: false
          schema:
            type: string
        -
          name: ss
          in: query
          description: 'The social security number for the patient.'
          required: false
          schema:
            type: string
        -
          name: street
          in: query
          description: 'The street for the patient.'
          required: false
          schema:
            type: string
        -
          name: postal_code
          in: query
          description: 'The postal code for the patient.'
          required: false
          schema:
            type: string
        -
          name: city
          in: query
          description: 'The city for the patient.'
          required: false
          schema:
            type: string
        -
          name: state
          in: query
          description: 'The state for the patient.'
          required: false
          schema:
            type: string
        -
          name: phone_home
          in: query
          description: 'The home phone for the patient.'
          required: false
          schema:
            type: string
        -
          name: phone_biz
          in: query
          description: 'The business phone for the patient.'
          required: false
          schema:
            type: string
        -
          name: phone_cell
          in: query
          description: 'The cell phone for the patient.'
          required: false
          schema:
            type: string
        -
          name: postal_contact
          in: query
          description: 'The postal_contact for the patient.'
          required: false
          schema:
            type: string
        -
          name: sex
          in: query
          description: 'The gender for the patient.'
          required: false
          schema:
            type: string
        -
          name: country_code
          in: query
          description: 'The country code for the patient.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email for the patient.'
          required: false
          schema:
            type: string
        -
          name: DOB
          in: query
          description: 'The DOB for the patient.'
          required: false
          schema:
            type: string
        -
          name: date
          in: query
          description: 'The date this patient resource was last modified.'
          required: false
          schema:
            type: string
        -
          name: _offset
          in: query
          description: 'The number of records to offset from this index in the search result.'
          required: false
          schema:
            type: integer
        -
          name: _limit
          in: query
          description: 'The maximum number of resources to return in the result set. 0 means unlimited.'
          required: false
          schema:
            type: integer
            maximum: 200
            minimum: 0
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Creates a new patient'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_patient_request'
      responses:
        '200':
          description: 'Standard response'
          content:
            application/json:
              schema:
                properties:
                  validationErrors: { description: 'Validation errors.', type: array, items: { type: object } }
                  internalErrors: { description: 'Internal errors.', type: array, items: { type: object } }
                  data: { description: 'Returned data.', type: array, items: { properties: { pid: { description: 'patient pid', type: integer } }, type: object } }
                type: object
                example:
                  validationErrors: []
                  error_description: []
                  data: { pid: 1 }
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a single patient by their uuid'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_patient_response'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Updates a patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_patient_request'
      responses:
        '200':
          description: 'Standard response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_patient_response'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/encounter':
    get:
      tags:
        - standard
      description: 'Retrieves a list of encounters for a single patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Creates a new encounter'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_encounter_request'
      responses:
        '200':
          description: 'Standard response'
          content:
            application/json:
              schema:
                properties:
                  validationErrors: { description: 'Validation errors.', type: array, items: { type: object } }
                  internalErrors: { description: 'Internal errors.', type: array, items: { type: object } }
                  data: { description: 'Returned data.', type: array, items: { properties: { encounter: { description: 'encounter id', type: integer }, uuid: { description: 'encounter uuid', type: string } }, type: object } }
                type: object
                example:
                  validationErrors: []
                  error_description: []
                  data: { encounter: 1, uuid: 90c196f2-51cc-4655-8858-3a80aebff3ef }
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/therapy_groups':
    get:
      tags:
        - standard
      description: 'Retrieves a list of therapy groups for a single patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/therapy_group/{pgid}':
    put:
      tags:
        - standard
      description: 'Adds a patient to a therapy group'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: pgid
          in: path
          description: 'The id for the therapy group.'
          required: true
          schema:
            type: string
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/encounter/{euuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a single encounter for a patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: euuid
          in: path
          description: 'The uuid for the encounter.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_encounter_response'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Modify a encounter'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: euuid
          in: path
          description: 'The uuid for the encounter.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_encounter_request'
      responses:
        '200':
          description: 'Standard response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_encounter_response'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/encounter/{eid}/soap_note':
    get:
      tags:
        - standard
      description: 'Retrieves soap notes from an encounter for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The id for the encounter.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a new soap note'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The id for the encounter.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_soap_note_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/encounter/{eid}/vital':
    get:
      tags:
        - standard
      description: 'Retrieves all vitals from an encounter for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The id for the encounter.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a new vitals form'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The id for the encounter.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_vital_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/encounter/{eid}/vital/{vid}':
    get:
      tags:
        - standard
      description: 'Retrieves a vitals form from an encounter for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The id for the encounter.'
          required: true
          schema:
            type: string
        -
          name: vid
          in: path
          description: 'The id for the vitals form.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Edit a vitals form'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The id for the encounter.'
          required: true
          schema:
            type: string
        -
          name: vid
          in: path
          description: 'The id for the vitalss form.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_vital_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/encounter/{eid}/soap_note/{sid}':
    get:
      tags:
        - standard
      description: 'Retrieves a soap note from an encounter for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The id for the encounter.'
          required: true
          schema:
            type: string
        -
          name: sid
          in: path
          description: 'The id for the soap note.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Edit a soap note'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The id for the encounter.'
          required: true
          schema:
            type: string
        -
          name: sid
          in: path
          description: 'The id for the soap noted.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_soap_note_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/practitioner:
    get:
      tags:
        - standard
      description: 'Retrieves a list of practitioners'
      parameters:
        -
          name: title
          in: query
          description: 'The title for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: fname
          in: query
          description: 'The first name for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: lname
          in: query
          description: 'The last name for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: mname
          in: query
          description: 'The middle name for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: federaltaxid
          in: query
          description: 'The federal tax id for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: federaldrugid
          in: query
          description: 'The federal drug id for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: upin
          in: query
          description: 'The upin for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: facility_id
          in: query
          description: 'The facility id for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: facility
          in: query
          description: 'The facility for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: npi
          in: query
          description: 'The npi for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: specialty
          in: query
          description: 'The specialty for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: billname
          in: query
          description: 'The billname for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: url
          in: query
          description: 'The url for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: assistant
          in: query
          description: 'The assistant for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: organization
          in: query
          description: 'The organization for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: valedictory
          in: query
          description: 'The valedictory for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: street
          in: query
          description: 'The street for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: streetb
          in: query
          description: 'The street (line 2) for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: city
          in: query
          description: 'The city for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: state
          in: query
          description: 'The state for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: zip
          in: query
          description: 'The zip for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: phone
          in: query
          description: 'The phone for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: fax
          in: query
          description: 'The fax for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: phonew1
          in: query
          description: 'The phonew1 for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: phonecell
          in: query
          description: 'The phonecell for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: notes
          in: query
          description: 'The notes for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: state_license_number2
          in: query
          description: 'The state license number for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: username
          in: query
          description: 'The username for the practitioner.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a new practitioner'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - fname
                - lname
                - npi
              properties:
                title:
                  description: 'The title for the practitioner.'
                  type: string
                fname:
                  description: 'The first name for the practitioner.'
                  type: string
                mname:
                  description: 'The middle name for the practitioner.'
                  type: string
                lname:
                  description: 'The last name for the practitioner.'
                  type: string
                federaltaxid:
                  description: 'The federal tax id for the practitioner.'
                  type: string
                federaldrugid:
                  description: 'The federal drug id for the practitioner.'
                  type: string
                upin:
                  description: 'The upin for the practitioner.'
                  type: string
                facility_id:
                  description: 'The facility_id for the practitioner.'
                  type: string
                facility:
                  description: 'The facility name for the practitioner.'
                  type: string
                npi:
                  description: 'The npi for the practitioner.'
                  type: string
                email:
                  description: 'The email for the practitioner.'
                  type: string
                specialty:
                  description: 'The specialty for the practitioner.'
                  type: string
                billname:
                  description: 'The billname for the practitioner.'
                  type: string
                url:
                  description: 'The url for the practitioner.'
                  type: string
                assistant:
                  description: 'The assistant for the practitioner.'
                  type: string
                valedictory:
                  description: 'The valedictory for the practitioner.'
                  type: string
                street:
                  description: 'The street address for the practitioner.'
                  type: string
                streetb:
                  description: 'The streetb address for the practitioner.'
                  type: string
                city:
                  description: 'The city for the practitioner.'
                  type: string
                state:
                  description: 'The state for the practitioner.'
                  type: string
                zip:
                  description: 'The zip for the practitioner.'
                  type: string
                phone:
                  description: 'The phone for the practitioner.'
                  type: string
                fax:
                  description: 'The fax for the practitioner.'
                  type: string
                phonew1:
                  description: 'The phonew1 for the practitioner.'
                  type: string
                phonecell:
                  description: 'The phonecell for the practitioner.'
                  type: string
                notes:
                  description: 'The notes for the practitioner.'
                  type: string
                state_license_number:
                  description: 'The state license number for the practitioner.'
                  type: string
                username:
                  description: 'The username for the practitioner.'
                  type: string
              type: object
              example:
                title: Mrs.
                fname: Eduardo
                mname: Kathy
                lname: Perez
                federaltaxid: ''
                federaldrugid: ''
                upin: ''
                facility_id: '3'
                facility: 'Your Clinic Name Here'
                npi: '12345678901'
                email: info@pennfirm.com
                specialty: ''
                billname: null
                url: null
                assistant: null
                organization: null
                valedictory: null
                street: '789 Third Avenue'
                streetb: '123 Cannaut Street'
                city: 'San Diego'
                state: CA
                zip: '90210'
                phone: '(619) 555-9827'
                fax: null
                phonew1: '(619) 555-7822'
                phonecell: '(619) 555-7821'
                notes: null
                state_license_number: '123456'
                username: eduardoperez
      responses:
        '200':
          description: 'Standard response'
          content:
            application/json:
              schema:
                properties:
                  validationErrors: { description: 'Validation errors.', type: array, items: { type: object } }
                  internalErrors: { description: 'Internal errors.', type: array, items: { type: object } }
                  data: { description: 'Returned data.', type: array, items: { properties: { id: { description: 'practitioner id', type: integer }, uuid: { description: 'practitioner uuid', type: string } }, type: object } }
                type: object
                example:
                  validationErrors: []
                  error_description: []
                  data: { id: 7, uuid: 90d453fb-0248-4c0d-9575-d99d02b169f5 }
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/practitioner/{pruuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a single practitioner by their uuid'
      parameters:
        -
          name: pruuid
          in: path
          description: 'The uuid for the practitioner.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Edit a practitioner'
      parameters:
        -
          name: pruuid
          in: path
          description: 'The uuid for the practitioner.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  description: 'The title for the practitioner.'
                  type: string
                fname:
                  description: 'The first name for the practitioner.'
                  type: string
                mname:
                  description: 'The middle name for the practitioner.'
                  type: string
                lname:
                  description: 'The last name for the practitioner.'
                  type: string
                federaltaxid:
                  description: 'The federal tax id for the practitioner.'
                  type: string
                federaldrugid:
                  description: 'The federal drug id for the practitioner.'
                  type: string
                upin:
                  description: 'The upin for the practitioner.'
                  type: string
                facility_id:
                  description: 'The facility_id for the practitioner.'
                  type: string
                facility:
                  description: 'The facility name for the practitioner.'
                  type: string
                npi:
                  description: 'The npi for the practitioner.'
                  type: string
                email:
                  description: 'The email for the practitioner.'
                  type: string
                specialty:
                  description: 'The specialty for the practitioner.'
                  type: string
                billname:
                  description: 'The billname for the practitioner.'
                  type: string
                url:
                  description: 'The url for the practitioner.'
                  type: string
                assistant:
                  description: 'The assistant for the practitioner.'
                  type: string
                valedictory:
                  description: 'The valedictory for the practitioner.'
                  type: string
                street:
                  description: 'The street address for the practitioner.'
                  type: string
                streetb:
                  description: 'The streetb address for the practitioner.'
                  type: string
                city:
                  description: 'The city for the practitioner.'
                  type: string
                state:
                  description: 'The state for the practitioner.'
                  type: string
                zip:
                  description: 'The zip for the practitioner.'
                  type: string
                phone:
                  description: 'The phone for the practitioner.'
                  type: string
                fax:
                  description: 'The fax for the practitioner.'
                  type: string
                phonew1:
                  description: 'The phonew1 for the practitioner.'
                  type: string
                phonecell:
                  description: 'The phonecell for the practitioner.'
                  type: string
                notes:
                  description: 'The notes for the practitioner.'
                  type: string
                state_license_number:
                  description: 'The state license number for the practitioner.'
                  type: string
                username:
                  description: 'The username for the practitioner.'
                  type: string
              type: object
              example:
                title: Mr
                fname: Baz
                mname: ''
                lname: Bop
                street: '456 Tree Lane'
                zip: '08642'
                city: FooTown
                state: FL
                phone: 123-456-7890
      responses:
        '200':
          description: 'Standard response'
          content:
            application/json:
              schema:
                properties:
                  validationErrors: { description: 'Validation errors.', type: array, items: { type: object } }
                  internalErrors: { description: 'Internal errors.', type: array, items: { type: object } }
                  data: { description: 'Returned data.', type: array, items: { properties: { id: { description: 'practitioner id', type: string }, uuid: { description: 'practitioner uuid', type: string }, title: { description: 'practitioner title', type: string }, fname: { description: 'practitioner fname', type: string }, lname: { description: 'practitioner lname', type: string }, mname: { description: 'practitioner mname', type: string }, federaltaxid: { description: 'practitioner federaltaxid', type: string }, federaldrugid: { description: 'practitioner federaldrugid', type: string }, upin: { description: 'practitioner upin', type: string }, facility_id: { description: 'practitioner facility_id', type: string }, facility: { description: 'practitioner facility', type: string }, npi: { description: 'practitioner npi', type: string }, email: { description: 'practitioner email', type: string }, active: { description: 'practitioner active setting', type: string }, specialty: { description: 'practitioner specialty', type: string }, billname: { description: 'practitioner billname', type: string }, url: { description: 'practitioner url', type: string }, assistant: { description: 'practitioner assistant', type: string }, organization: { description: 'practitioner organization', type: string }, valedictory: { description: 'practitioner valedictory', type: string }, street: { description: 'practitioner street', type: string }, streetb: { description: 'practitioner streetb', type: string }, city: { description: 'practitioner city', type: string }, state: { description: 'practitioner state', type: string }, zip: { description: 'practitioner zip', type: string }, phone: { description: 'practitioner phone', type: string }, fax: { description: fax, type: string }, phonew1: { description: 'practitioner phonew1', type: string }, phonecell: { description: 'practitioner phonecell', type: string }, notes: { description: 'practitioner notes', type: string }, state_license_number: { description: 'practitioner state license number', type: string }, abook_title: { description: 'practitioner abook title', type: string }, physician_title: { description: 'practitioner physician title', type: string }, physician_code: { description: 'practitioner physician code', type: string } }, type: object } }
                type: object
                example:
                  validationErrors: []
                  error_description: []
                  data: { id: 7, uuid: 90d453fb-0248-4c0d-9575-d99d02b169f5, title: Mr, fname: Baz, lname: Bop, mname: '', federaltaxid: '', federaldrugid: '', upin: '', facility_id: '3', facility: 'Your Clinic Name Here', npi: '0123456789', email: info@pennfirm.com, active: '1', specialty: '', billname: '', url: '', assistant: '', organization: '', valedictory: '', street: '456 Tree Lane', streetb: '123 Cannaut Street', city: FooTown, state: FL, zip: '08642', phone: 123-456-7890, fax: '', phonew1: '(619) 555-7822', phonecell: '(619) 555-7821', notes: '', state_license_number: '123456', abook_title: null, physician_title: null, physician_code: null }
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/medical_problem:
    get:
      tags:
        - standard
      description: 'Retrieves a list of medical problems'
      parameters:
        -
          name: puuid
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: condition_uuid
          in: query
          description: 'The uuid for the medical problem.'
          required: false
          schema:
            type: string
        -
          name: title
          in: query
          description: 'The title for the medical problem.'
          required: false
          schema:
            type: string
        -
          name: begdate
          in: query
          description: 'The start date for the medical problem.'
          required: false
          schema:
            type: string
        -
          name: enddate
          in: query
          description: 'The end date for the medical problem.'
          required: false
          schema:
            type: string
        -
          name: diagnosis
          in: query
          description: 'The diagnosis for the medical problem.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/medical_problem/{muuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a single medical problem by their uuid'
      parameters:
        -
          name: muuid
          in: path
          description: 'The uuid for the medical problem.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/medical_problem':
    get:
      tags:
        - standard
      description: 'Retrieves all medical problems for a patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a new medical problem'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_medical_problem_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/medical_problem/{muuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a medical problem for a patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: muuid
          in: path
          description: 'The uuid for the medical problem.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Edit a medical problem'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: muuid
          in: path
          description: 'The uuid for the medical problem.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_medical_problem_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a medical problem'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: muuid
          in: path
          description: 'The uuid for the medical problem.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/allergy:
    get:
      tags:
        - standard
      description: 'Retrieves a list of allergies'
      parameters:
        -
          name: lists.pid
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: lists.id
          in: query
          description: 'The uuid for the allergy.'
          required: false
          schema:
            type: string
        -
          name: title
          in: query
          description: 'The title for the allergy.'
          required: false
          schema:
            type: string
        -
          name: begdate
          in: query
          description: 'The start date for the allergy.'
          required: false
          schema:
            type: string
        -
          name: enddate
          in: query
          description: 'The end date for the allergy.'
          required: false
          schema:
            type: string
        -
          name: diagnosis
          in: query
          description: 'The diagnosis for the allergy.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/allergy/{auuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a single allergy by their uuid'
      parameters:
        -
          name: auuid
          in: path
          description: 'The uuid for the allergy.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/allergy':
    get:
      tags:
        - standard
      description: 'Retrieves all allergies for a patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a new allergy'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_allergy_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/allergy/{auuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a allergy for a patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: auuid
          in: path
          description: 'The uuid for the allergy.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Edit a allergy'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: auuid
          in: path
          description: 'The uuid for the allergy.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_allergy_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a medical problem'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: auuid
          in: path
          description: 'The uuid for the allergy.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/medication':
    get:
      tags:
        - standard
      description: 'Retrieves all medications for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a new medication'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_medication_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/medication/{mid}':
    get:
      tags:
        - standard
      description: 'Retrieves a medication for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: mid
          in: path
          description: 'The id for the medication.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Edit a medication'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: mid
          in: path
          description: 'The id for the medication.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_medication_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a medication'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: mid
          in: path
          description: 'The id for the medication.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/surgery':
    get:
      tags:
        - standard
      description: 'Retrieves all surgeries for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a new surgery'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_surgery_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/surgery/{sid}':
    get:
      tags:
        - standard
      description: 'Retrieves a surgery for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: sid
          in: path
          description: 'The id for the surgery.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Edit a surgery'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: sid
          in: path
          description: 'The id for the surgery.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_surgery_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a surgery'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: sid
          in: path
          description: 'The id for the surgery.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/dental_issue':
    get:
      tags:
        - standard
      description: 'Retrieves all dental issues for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a new dental issue'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_dental_issue_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/dental_issue/{did}':
    get:
      tags:
        - standard
      description: 'Retrieves a dental issue for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: did
          in: path
          description: 'The id for the dental issue.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Edit a dental issue'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: did
          in: path
          description: 'The id for the dental issue.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_dental_issue_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a dental issue'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: did
          in: path
          description: 'The id for the dental issue.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/appointment':
    get:
      tags:
        - standard
      description: 'Retrieves all appointments for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a new appointment'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - pc_catid
                - pc_title
                - pc_duration
                - pc_hometext
                - pc_apptstatus
                - pc_eventDate
                - pc_startTime
                - pc_facility
                - pc_billing_location
              properties:
                pc_catid:
                  description: 'The category of the appointment.'
                  type: string
                pc_title:
                  description: 'The title of the appointment.'
                  type: string
                pc_duration:
                  description: 'The duration of the appointment.'
                  type: string
                pc_hometext:
                  description: 'Comments for the appointment.'
                  type: string
                pc_apptstatus:
                  description: 'use an option from resource=/api/list/apptstat'
                  type: string
                pc_eventDate:
                  description: 'The date of the appointment.'
                  type: string
                pc_startTime:
                  description: 'The time of the appointment.'
                  type: string
                pc_facility:
                  description: 'The facility id of the appointment.'
                  type: string
                pc_billing_location:
                  description: 'The billinag location id of the appointment.'
                  type: string
                pc_aid:
                  description: 'The provider id for the appointment.'
                  type: string
              type: object
              example:
                pc_catid: '5'
                pc_title: 'Office Visit'
                pc_duration: '900'
                pc_hometext: Test
                pc_apptstatus: '-'
                pc_eventDate: '2018-10-19'
                pc_startTime: '09:00'
                pc_facility: '9'
                pc_billing_location: '10'
                pc_aid: '1'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/appointment:
    get:
      tags:
        - standard
      description: 'Retrieves all appointments'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/appointment/{eid}':
    get:
      tags:
        - standard
      description: 'Retrieves an appointment'
      parameters:
        -
          name: eid
          in: path
          description: 'The eid for the appointment.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/appointment/{eid}':
    get:
      tags:
        - standard
      description: 'Retrieves a appointment for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The eid for the appointment.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a appointment'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The eid for the appointment.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/list/{list_name}':
    get:
      tags:
        - standard
      description: 'Retrieves a list'
      parameters:
        -
          name: list_name
          in: path
          description: 'The list_id of the list.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/user:
    get:
      tags:
        - standard
      description: 'Retrieves a list of users'
      parameters:
        -
          name: id
          in: query
          description: 'The id for the user.'
          required: false
          schema:
            type: string
        -
          name: title
          in: query
          description: 'The title for the user.'
          required: false
          schema:
            type: string
        -
          name: fname
          in: query
          description: 'The first name for the user.'
          required: false
          schema:
            type: string
        -
          name: lname
          in: query
          description: 'The last name for the user.'
          required: false
          schema:
            type: string
        -
          name: mname
          in: query
          description: 'The middle name for the user.'
          required: false
          schema:
            type: string
        -
          name: federaltaxid
          in: query
          description: 'The federal tax id for the user.'
          required: false
          schema:
            type: string
        -
          name: federaldrugid
          in: query
          description: 'The federal drug id for the user.'
          required: false
          schema:
            type: string
        -
          name: upin
          in: query
          description: 'The upin for the user.'
          required: false
          schema:
            type: string
        -
          name: facility_id
          in: query
          description: 'The facility id for the user.'
          required: false
          schema:
            type: string
        -
          name: facility
          in: query
          description: 'The facility for the user.'
          required: false
          schema:
            type: string
        -
          name: npi
          in: query
          description: 'The npi for the user.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email for the user.'
          required: false
          schema:
            type: string
        -
          name: specialty
          in: query
          description: 'The specialty for the user.'
          required: false
          schema:
            type: string
        -
          name: billname
          in: query
          description: 'The billname for the user.'
          required: false
          schema:
            type: string
        -
          name: url
          in: query
          description: 'The url for the user.'
          required: false
          schema:
            type: string
        -
          name: assistant
          in: query
          description: 'The assistant for the user.'
          required: false
          schema:
            type: string
        -
          name: organization
          in: query
          description: 'The organization for the user.'
          required: false
          schema:
            type: string
        -
          name: valedictory
          in: query
          description: 'The valedictory for the user.'
          required: false
          schema:
            type: string
        -
          name: street
          in: query
          description: 'The street for the user.'
          required: false
          schema:
            type: string
        -
          name: streetb
          in: query
          description: 'The street (line 2) for the user.'
          required: false
          schema:
            type: string
        -
          name: city
          in: query
          description: 'The city for the user.'
          required: false
          schema:
            type: string
        -
          name: state
          in: query
          description: 'The state for the user.'
          required: false
          schema:
            type: string
        -
          name: zip
          in: query
          description: 'The zip for the user.'
          required: false
          schema:
            type: string
        -
          name: phone
          in: query
          description: 'The phone for the user.'
          required: false
          schema:
            type: string
        -
          name: fax
          in: query
          description: 'The fax for the user.'
          required: false
          schema:
            type: string
        -
          name: phonew1
          in: query
          description: 'The phonew1 for the user.'
          required: false
          schema:
            type: string
        -
          name: phonecell
          in: query
          description: 'The phonecell for the user.'
          required: false
          schema:
            type: string
        -
          name: notes
          in: query
          description: 'The notes for the user.'
          required: false
          schema:
            type: string
        -
          name: state_license_number2
          in: query
          description: 'The state license number for the user.'
          required: false
          schema:
            type: string
        -
          name: username
          in: query
          description: 'The username for the user.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/user/{uuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a single user by their uuid'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the user.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/version:
    get:
      tags:
        - standard
      description: 'Retrieves the OpenEMR version information'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/product:
    get:
      tags:
        - standard
      description: 'Retrieves the OpenEMR product registration information'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/insurance_company:
    get:
      tags:
        - standard
      description: 'Retrieves all insurance companies'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a new insurance company'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_insurance_company_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/insurance_company/{iid}':
    get:
      tags:
        - standard
      description: 'Retrieves insurance company'
      parameters:
        -
          name: iid
          in: path
          description: 'The id of the insurance company.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Edit a insurance company'
      parameters:
        -
          name: iid
          in: path
          description: 'The id for the insurance company.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_insurance_company_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/insurance_type:
    get:
      tags:
        - standard
      description: 'Retrieves all insurance types'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/document':
    get:
      tags:
        - standard
      description: 'Retrieves all file information of documents from a category for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: path
          in: query
          description: 'The category of the documents.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a new patient document'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: path
          in: query
          description: 'The category of the document.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              properties:
                document:
                  description: document
                  type: string
                  format: binary
              type: object
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/document/{did}':
    get:
      tags:
        - standard
      description: 'Retrieves a document for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: did
          in: path
          description: 'The id for the patient document.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/employer':
    get:
      tags:
        - standard
      description: 'Retrieves all the employer data for a patient. Returns an array of the employer data for the patient.'
      parameters:
        -
          name: pid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/insurance':
    get:
      tags:
        - standard
      description: 'Retrieves all insurances for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a new patient insurance.'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_insurance_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/insurance/$swap-insurance':
    get:
      tags:
        - standard
      description: 'Updates the insurance for the passed in uuid to be a policy of type `type` and updates (if one exists) the current or most recent insurance for the passed in `type` for a patient to be the `type` of the insurance for the given `uuid`. Validations on the swap operation are performed to make sure the effective `date` of the src and target policies being swapped can be received in each given policy `type` as a policy `type` and `date` must together be unique per patient.'
      parameters:
        -
          name: pid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: type
          in: query
          description: "The type or category of OpenEMR insurance policy, 'primary', 'secondary', or 'tertiary'."
          required: true
          schema:
            type: string
        -
          name: uuid
          in: query
          description: 'The insurance uuid that will be swapped into the list of insurances for the type query parameter'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/insurance/{uuid}':
    get:
      tags:
        - standard
      description: 'Retrieves all insurances for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/insurance/{insuranceUuid}':
    put:
      tags:
        - standard
      description: 'Edit a specific patient insurance policy. Requires the patients/demo/write ACL to call. This method is the preferred method for updating a patient insurance policy. The {insuranceId} can be found by querying /api/patient/{pid}/insurance'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: insuranceUuid
          in: path
          description: 'The insurance policy uuid for the patient.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_insurance_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/message':
    post:
      tags:
        - standard
      description: 'Submits a pnote message'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_message_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/transaction':
    get:
      tags:
        - standard
      description: 'Get Transactions for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a transaction'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_transaction_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/transaction/{tid}':
    put:
      tags:
        - standard
      description: 'Updates a transaction'
      parameters:
        -
          name: tid
          in: path
          description: 'The id for the transaction.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_transaction_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/message/{mid}':
    put:
      tags:
        - standard
      description: 'Edit a pnote message'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: mid
          in: path
          description: 'The id for the pnote message.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_message_request'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a pnote message'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: mid
          in: path
          description: 'The id for the pnote message.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/immunization:
    get:
      tags:
        - standard
      description: 'Retrieves a list of immunizations'
      parameters:
        -
          name: patient_id
          in: query
          description: 'The pid for the patient.'
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          description: 'The id for the immunization.'
          required: false
          schema:
            type: string
        -
          name: uuid
          in: query
          description: 'The uuid for the immunization.'
          required: false
          schema:
            type: string
        -
          name: administered_date
          in: query
          description: 'The administered date for the immunization.'
          required: false
          schema:
            type: string
        -
          name: immunization_id
          in: query
          description: 'The immunization list_id for the immunization.'
          required: false
          schema:
            type: string
        -
          name: cvx_code
          in: query
          description: 'The cvx code for the immunization.'
          required: false
          schema:
            type: string
        -
          name: manufacturer
          in: query
          description: 'The manufacturer for the immunization.'
          required: false
          schema:
            type: string
        -
          name: lot_number
          in: query
          description: 'The lot number for the immunization.'
          required: false
          schema:
            type: string
        -
          name: administered_by_id
          in: query
          description: 'The administered by id for the immunization.'
          required: false
          schema:
            type: string
        -
          name: administered_by
          in: query
          description: 'The administered by for the immunization.'
          required: false
          schema:
            type: string
        -
          name: education_date
          in: query
          description: 'The education date for the immunization.'
          required: false
          schema:
            type: string
        -
          name: vis_date
          in: query
          description: 'The vis date for the immunization.'
          required: false
          schema:
            type: string
        -
          name: note
          in: query
          description: 'The note for the immunization.'
          required: false
          schema:
            type: string
        -
          name: create_date
          in: query
          description: 'The create date for the immunization.'
          required: false
          schema:
            type: string
        -
          name: update_date
          in: query
          description: 'The update date for the immunization.'
          required: false
          schema:
            type: string
        -
          name: created_by
          in: query
          description: 'The created_by for the immunization.'
          required: false
          schema:
            type: string
        -
          name: updated_by
          in: query
          description: 'The updated_by for the immunization.'
          required: false
          schema:
            type: string
        -
          name: amount_administered
          in: query
          description: 'The amount administered for the immunization.'
          required: false
          schema:
            type: string
        -
          name: amount_administered_unit
          in: query
          description: 'The amount administered unit for the immunization.'
          required: false
          schema:
            type: string
        -
          name: expiration_date
          in: query
          description: 'The expiration date for the immunization.'
          required: false
          schema:
            type: string
        -
          name: route
          in: query
          description: 'The route for the immunization.'
          required: false
          schema:
            type: string
        -
          name: administration_site
          in: query
          description: 'The administration site for the immunization.'
          required: false
          schema:
            type: string
        -
          name: added_erroneously
          in: query
          description: 'The added_erroneously for the immunization.'
          required: false
          schema:
            type: string
        -
          name: external_id
          in: query
          description: 'The external_id for the immunization.'
          required: false
          schema:
            type: string
        -
          name: completion_status
          in: query
          description: 'The completion status for the immunization.'
          required: false
          schema:
            type: string
        -
          name: information_source
          in: query
          description: 'The information source for the immunization.'
          required: false
          schema:
            type: string
        -
          name: refusal_reason
          in: query
          description: 'The refusal reason for the immunization.'
          required: false
          schema:
            type: string
        -
          name: ordering_provider
          in: query
          description: 'The ordering provider for the immunization.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/immunization/{uuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a immunization'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the immunization.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/procedure:
    get:
      tags:
        - standard
      description: 'Retrieves a list of all procedures'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/procedure/{uuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a procedure'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the procedure.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/drug:
    get:
      tags:
        - standard
      description: 'Retrieves a list of all drugs'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/drug/{uuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a drug'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the drug.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/prescription:
    get:
      tags:
        - standard
      description: 'Retrieves a list of all prescriptions'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/prescription/{uuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a prescription'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the prescription.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/AllergyIntolerance:
    get:
      tags:
        - fhir
      description: 'Returns a list of AllergyIntolerance resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the AllergyIntolerance resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/AllergyIntolerance' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/AllergyIntolerance/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single AllergyIntolerance resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the AllergyIntolerance resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 94682fe5-f383-4885-9505-64b02e34906f
                  meta: { versionId: '1', lastUpdated: '2021-09-16T00:27:32+00:00' }
                  resourceType: AllergyIntolerance
                  text: { status: additional, div: "<div xmlns='http://www.w3.org/1999/xhtml'>penicillin</div>" }
                  clinicalStatus: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/allergyintolerance-clinical', code: active, display: Active }] }
                  verificationStatus: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/allergyintolerance-verification', code: confirmed, display: Confirmed }] }
                  category: [medication]
                  criticality: low
                  code: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/data-absent-reason', code: unknown, display: Unknown }] }
                  patient: { reference: Patient/94682ef5-b0e3-4289-b19a-11b9592e9c92 }
                  reaction: [{ manifestation: [{ coding: [{ system: 'http://snomed.info/sct', code: '422587007', display: Nausea }], text: Nausea }] }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/Appointment:
    get:
      tags:
        - fhir
      description: 'Returns a list of Appointment resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Appointment resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/AllergyIntolerance' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Appointment/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Appointment resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Appointment resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example: []
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/CarePlan:
    get:
      tags:
        - fhir
      description: 'Returns a list of CarePlan resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the CarePlan resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: category
          in: query
          description: 'The category of the CarePlan resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/CarePlan' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/CarePlan/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single CarePlan resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the CarePlan resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 94682f08-8fbc-451e-b1ec-f922d765c38f_1
                  meta: { versionId: '1', lastUpdated: '2021-09-16T00:54:18+00:00' }
                  resourceType: CarePlan
                  text: { status: generated, div: '<div xmlns="http://www.w3.org/1999/xhtml"><p>Treat flu.</p></div>' }
                  status: active
                  intent: plan
                  category: [{ coding: [{ system: 'http://hl7.org/fhir/us/core/CodeSystem/careplan-category', code: assess-plan }] }]
                  description: 'Treat flu.'
                  subject: { reference: Patient/94682ef5-b0e3-4289-b19a-11b9592e9c92, type: Patient }
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/CareTeam:
    get:
      tags:
        - fhir
      description: 'Returns a list of CareTeam resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the CareTeam resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: status
          in: query
          description: 'The status of the CarePlan resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/CareTeam' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/CareTeam/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single CareTeam resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the CareTeam resource.'
          required: true
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 94682f09-69fe-4ada-8ea6-753a52bd1516
                  meta: { versionId: '1', lastUpdated: '2021-09-16T01:07:22+00:00' }
                  resourceType: CareTeam
                  status: active
                  subject: { reference: Patient/94682ef5-b0e3-4289-b19a-11b9592e9c92, type: Patient }
                  participant: [{ role: [{ coding: [{ system: 'http://nucc.org/provider-taxonomy', code: 102L00000X, display: Psychoanalyst }] }], member: { reference: Practitioner/94682c68-f712-4c39-9158-ff132a08f26b, type: Practitioner }, onBehalfOf: { reference: Organization/94682c62-b801-4498-84a1-13f158bb2a18, type: Organization } }, { role: [{ coding: [{ system: 'http://terminology.hl7.org/CodeSystem/data-absent-reason', code: unknown, display: Unknown }] }], member: { reference: Organization/94682c62-b801-4498-84a1-13f158bb2a18, type: Organization } }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/Condition:
    get:
      tags:
        - fhir
      description: 'Returns a list of Condition resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Condition resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Condition' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Condition/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Condition resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Condition resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 94682c68-e5bb-4c5c-859a-cebaa5a1e582
                  meta: { versionId: '1', lastUpdated: '2021-09-16T02:41:53+00:00' }
                  resourceType: Condition
                  clinicalStatus: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: inactive, display: Inactive }] }
                  verificationStatus: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/condition-ver-status', code: unconfirmed, display: Unconfirmed }] }
                  category: [{ coding: [{ system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: problem-list-item, display: 'Problem List Item' }] }]
                  code: { coding: [{ system: 'http://snomed.info/sct', code: '444814009', display: '' }] }
                  subject: { reference: Patient/94682c62-d37e-48b5-8018-c5f6f3566609 }
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/Coverage:
    get:
      tags:
        - fhir
      description: 'Returns a list of Coverage resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Coverage resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: payor
          in: query
          description: 'The payor of the Coverage resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Coverage' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Coverage/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Coverage resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Coverage resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 960d5f10-edc6-4c65-a6d4-39a1e1da87a8
                  meta: { versionId: '1', lastUpdated: '2022-04-14T07:58:45+00:00' }
                  resourceType: Coverage
                  status: active
                  beneficiary: { reference: Patient/960d5f08-9fdf-4bdc-9108-84a149e28bac }
                  relationship: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/subscriber-relationship', code: '' }] }
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/Device:
    get:
      tags:
        - fhir
      description: 'Returns a list of Device resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Device resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Device' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Device/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Device resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Device resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 946dce19-c80a-402c-862a-eadf3f2377f0
                  meta: { versionId: '1', lastUpdated: '2021-09-18T19:28:59+00:00' }
                  resourceType: Device
                  udiCarrier: [{ deviceIdentifier: '08717648200274', carrierHRF: '=/08717648200274=,000025=A99971312345600=>014032=}013032&,1000000000000XYZ123' }]
                  distinctIdentifier: A99971312345600
                  manufactureDate: '2013-02-01'
                  expirationDate: '2014-02-01'
                  lotNumber: 000000000000XYZ123
                  serialNumber: '000025'
                  type: { extension: [{ valueCode: unknown, url: 'http://hl7.org/fhir/StructureDefinition/data-absent-reason' }] }
                  patient: { reference: Patient/946da619-c631-431a-a282-487cd6fb7802, type: Patient }
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/DiagnosticReport:
    get:
      tags:
        - fhir
      description: 'Returns a list of DiagnosticReport resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the DiagnosticReport resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: code
          in: query
          description: 'The code of the DiagnosticReport resource.'
          required: false
          schema:
            type: string
        -
          name: category
          in: query
          description: 'The category of the DiagnosticReport resource.'
          required: false
          schema:
            type: string
        -
          name: date
          in: query
          description: 'The datetime of the DiagnosticReport resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/DiagnosticReport' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/DiagnosticReport/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single DiagnosticReport resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the DiagnosticReport resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 93fb2d6a-77ac-48ca-a12d-1a17e40007e3
                  meta: { versionId: '1', lastUpdated: '2021-09-18T20:52:34+00:00' }
                  resourceType: DiagnosticReport
                  status: final
                  category: [{ coding: [{ system: 'http://loinc.org', code: LP7839-6, display: Pathology }] }]
                  code: { coding: [{ system: 'http://loinc.org', code: 11502-2, display: 'Laboratory report' }] }
                  subject: { reference: Patient/9353b8f5-0a87-4e2a-afd4-25341fdb0fbc, type: Patient }
                  encounter: { reference: Encounter/93540818-cb5f-49df-b73b-83901bb793b6, type: Encounter }
                  effectiveDateTime: '2015-06-22T00:00:00+00:00'
                  issued: '2015-06-22T00:00:00+00:00'
                  performer: [{ reference: Organization/935249b5-0ba6-4b5b-8863-a7a27d4c6350, type: Organization }]
                  presentedForm: [{ contentType: text/plain, data: TXMgQWxpY2UgTmV3bWFuIHdhcyB0ZXN0ZWQgZm9yIHRoZSBVcmluYW5hbHlzaXMgbWFjcm8gcGFuZWwgYW5kIHRoZSByZXN1bHRzIGhhdmUgYmVlbiBmb3VuZCB0byBiZSANCm5vcm1hbC4= }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/DocumentReference:
    get:
      tags:
        - fhir
      description: 'Returns a list of DocumentReference resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the DocumentReference resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: type
          in: query
          description: 'The type of the DocumentReference resource.'
          required: false
          schema:
            type: string
        -
          name: category
          in: query
          description: 'The category of the DocumentReference resource.'
          required: false
          schema:
            type: string
        -
          name: date
          in: query
          description: 'The datetime of the DocumentReference resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/DocumentReference' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/DocumentReference/$docref:
    post:
      tags:
        - fhir
      description: "The $docref operation is used to request the server generates a document based on the specified parameters. If no additional parameters are specified then a DocumentReference to the patient's most current Clinical Summary of Care Document (CCD) is returned. The document itself is retrieved using the DocumentReference.content.attachment.url element.  See <a href='http://hl7.org/fhir/us/core/OperationDefinition-docref.html' target='_blank' rel='noopener'>http://hl7.org/fhir/us/core/OperationDefinition-docref.html</a> for more details."
      externalDocs:
        description: 'Detailed documentation on this operation'
        url: 'https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API'
      parameters:
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: start
          in: query
          description: 'The datetime refers to care dates not record currency dates.  All records relating to care provided in a certain date range.  If no start date is provided then all documents prior to the end date are in scope.  If no start and end date are provided, the most recent or current document is in scope.'
          required: false
          schema:
            type: string
        -
          name: end
          in: query
          description: 'The datetime refers to care dates not record currency dates.  All records relating to care provided in a certain date range.  If no end date is provided then all documents subsequent to the start date are in scope.  If no start and end date are provided, the most recent or current document is in scope.'
          required: false
          schema:
            type: string
        -
          name: type
          in: query
          description: "The type refers to the document type.  This is a LOINC code from the valueset of <a href='http://hl7.org/fhir/R4/valueset-c80-doc-typecodes.html' target='_blank' rel='noopener'>http://hl7.org/fhir/R4/valueset-c80-doc-typecodes.html</a>. The server currently only supports the LOINC code of 34133-9 (Summary of episode node)."
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'A search bundle of DocumentReferences is returned'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/DocumentReference/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single DocumentReference resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the DocumentReference resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 946e7553-1aaa-49f8-8f81-ae15ccaa9165
                  meta: { versionId: '1', lastUpdated: '2021-09-19T03:17:51+00:00' }
                  resourceType: DocumentReference
                  identifier: [{ value: 946e7553-1aaa-49f8-8f81-ae15ccaa9165 }]
                  status: current
                  type: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor', code: UNK, display: unknown }] }
                  category: [{ coding: [{ system: 'https://localhost:9300/apis/default/fhir/ValueSet/openemr-document-types', code: openemr-document, display: 'OpenEMR Document' }] }]
                  subject: { reference: Patient/946da619-c631-431a-a282-487cd6fb7802, type: Patient }
                  date: '2021-09-19T03:15:56+00:00'
                  author: [null]
                  content: [{ attachment: { contentType: image/gif, url: 'https://localhost:9300/apis/default/fhir/Binary/7' }, format: { system: 'http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem', code: 'urn:ihe:iti:xds:2017:mimeTypeSufficient', display: 'mimeType Sufficient' } }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  '/fhir/Binary/{id}':
    get:
      tags:
        - fhir
      description: "Used for downloading binary documents generated either with BULK FHIR Export or with the $docref CCD export operation.  Documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
      parameters:
        -
          name: id
          in: path
          description: 'The id for the Document.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "The documentation for working with BULK FHIR or $docref document exports can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Encounter:
    get:
      tags:
        - fhir
      description: 'Returns a list of Encounter resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Encounter resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: date
          in: query
          description: 'The datetime of the Encounter resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Encounter' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Encounter/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Encounter resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Encounter resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 946da61d-6b95-4f8e-abe5-534a25913b71
                  meta: { versionId: '1', lastUpdated: '2021-09-19T06:27:41+00:00' }
                  resourceType: Encounter
                  identifier: [{ system: 'urn:ietf:rfc:3986', value: 946da61d-6b95-4f8e-abe5-534a25913b71 }]
                  status: finished
                  class: { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: AMB, display: ambulatory }
                  type: [{ coding: [{ system: 'http://snomed.info/sct', code: '185349003', display: 'Encounter for check up (procedure)' }] }]
                  subject: { reference: Patient/946da61b-626b-4f88-81e2-adfb88f4f0fe, type: Patient }
                  participant: [{ type: [{ coding: [{ system: 'http://terminology.hl7.org/CodeSystem/v3-ParticipationType', code: PPRF, display: 'Primary Performer' }] }], period: { start: '2012-08-13T00:00:00+00:00' }, individual: { reference: Practitioner/946da61d-ac5f-4fdc-b3f2-7b58dc49976b, type: Practitioner } }]
                  period: { start: '2012-08-13T00:00:00+00:00' }
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/Goal:
    get:
      tags:
        - fhir
      description: 'Returns a list of Condition resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Goal resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Goal' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Goal/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Goal resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Goal resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 946da61d-6b88-4d54-bdd6-4029e2ad9e3f_1
                  meta: { versionId: '1', lastUpdated: '2021-09-19T06:45:58+00:00' }
                  resourceType: Goal
                  lifecycleStatus: active
                  description: { text: 'Eating more vegetables.' }
                  subject: { reference: Patient/946da619-c631-431a-a282-487cd6fb7802, type: Patient }
                  target: [{ measure: { extension: [{ valueCode: unknown, url: 'http://hl7.org/fhir/StructureDefinition/data-absent-reason' }] }, detailString: 'Eating more vegetables.', dueDate: '2021-09-09' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/Group:
    get:
      tags:
        - fhir
      description: "The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Group resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Group' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Group/{uuid}':
    get:
      tags:
        - fhir
      description: "The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Group resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  '/fhir/Group/{id}/$export':
    get:
      tags:
        - fhir
      description: "The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
      parameters:
        -
          name: id
          in: path
          description: 'The id for the Group resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Immunization:
    get:
      tags:
        - fhir
      description: 'Returns a list of Immunization resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Immunization resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Immunization' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Immunization/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Immunization resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Immunization resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 95e8d8b7-e3e2-4e03-8eb1-31e1d9097d8f
                  meta: { versionId: '1', lastUpdated: '2022-03-26T05:42:59+00:00' }
                  resourceType: Immunization
                  status: completed
                  vaccineCode: { coding: [{ system: 'http://hl7.org/fhir/sid/cvx', code: '207', display: 'SARS-COV-2 (COVID-19) vaccine, mRNA, spike protein, LNP, preservative free, 100 mcg/0.5mL dose' }] }
                  patient: { reference: Patient/95e8d830-3068-48cf-930a-2fefb18c2bcf }
                  occurrenceDateTime: '2022-03-26T05:35:00+00:00'
                  recorded: '2022-03-26T05:42:26+00:00'
                  primarySource: false
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/Location:
    get:
      tags:
        - fhir
      description: 'Returns a list of Location resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Location resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Location' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Location/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Location resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Location resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 946da61d-c4f2-4f03-a2a7-b571f6a24b65
                  meta: { versionId: '1', lastUpdated: '2021-09-19T08:14:58+00:00' }
                  resourceType: Location
                  status: active
                  name: 'Your Clinic Name Here'
                  telecom: [{ system: phone, value: 000-000-0000 }, { system: fax, value: 000-000-0000 }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/Medication:
    get:
      tags:
        - fhir
      description: 'Returns a list of Medication resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Medication resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Medication' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Medication/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Medication resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Medication resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 961aa334-9348-4145-8252-de665e3c4afa
                  meta: { versionId: '1', lastUpdated: '2022-04-19T23:42:14+00:00' }
                  resourceType: Medication
                  code: { coding: [{ system: 'http://www.nlm.nih.gov/research/umls/rxnorm', code: 153165 }] }
                  status: active
                  batch: { lotNumber: '132', expirationDate: '0000-00-00' }
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/MedicationRequest:
    get:
      tags:
        - fhir
      description: 'Returns a list of MedicationRequest resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the MedicationRequest resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: intent
          in: query
          description: 'The intent of the MedicationRequest resource.'
          required: false
          schema:
            type: string
        -
          name: status
          in: query
          description: 'The status of the MedicationRequest resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/MedicationRequest' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/MedicationRequest/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single MedicationRequest resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the MedicationRequest resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 946da61d-9cff-4416-8d27-805f19f9d7d8
                  meta: { versionId: '1', lastUpdated: '2021-09-20T04:03:14+00:00' }
                  resourceType: MedicationRequest
                  status: active
                  intent: order
                  category: [{ coding: [{ system: 'http://terminology.hl7.org/CodeSystem/medicationrequest-category', code: community, display: Home/Community }] }]
                  reportedBoolean: false
                  medicationCodeableConcept: { coding: [{ system: 'http://www.nlm.nih.gov/research/umls/rxnorm', code: '1738139', display: 'Acetaminophen 325 MG Oral Tablet' }] }
                  subject: { reference: Patient/946da617-1a4a-4b2c-ae66-93b84377cb1e, type: Patient }
                  authoredOn: '2021-09-18T00:00:00+00:00'
                  requester: { reference: Practitioner/946da61d-ac5f-4fdc-b3f2-7b58dc49976b, type: Practitioner }
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/Observation:
    get:
      tags:
        - fhir
      description: 'Returns a list of Observation resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Observation resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: code
          in: query
          description: 'The code of the Observation resource.'
          required: false
          schema:
            type: string
        -
          name: category
          in: query
          description: 'The category of the Observation resource.'
          required: false
          schema:
            type: string
        -
          name: date
          in: query
          description: 'The datetime of the Observation resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Observation' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Observation/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Observation resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Observation resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 946da61e-0597-485e-9dfd-a87205ea56b3
                  meta: { versionId: '1', lastUpdated: '2021-09-20T04:12:16+00:00' }
                  resourceType: Observation
                  status: final
                  category: [{ coding: [{ system: 'http://terminology.hl7.org/CodeSystem/observation-category', code: vital-signs }] }]
                  code: { coding: [{ system: 'http://loinc.org', code: 85354-9, display: 'Blood pressure systolic and diastolic' }] }
                  subject: { reference: Patient/946da619-c631-431a-a282-487cd6fb7802, type: Patient }
                  effectiveDateTime: '2015-08-31T00:00:00+00:00'
                  component: [{ code: { coding: [{ system: 'http://loinc.org', code: 8480-6, display: 'Systolic blood pressure' }] }, valueQuantity: { value: 122, unit: 'mm[Hg]', system: 'http://unitsofmeasure.org', code: 'mm[Hg]' } }, { code: { coding: [{ system: 'http://loinc.org', code: 8462-4, display: 'Diastolic blood pressure' }] }, valueQuantity: { value: 77, unit: 'mm[Hg]', system: 'http://unitsofmeasure.org', code: 'mm[Hg]' } }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/Organization:
    get:
      tags:
        - fhir
      description: 'Returns a list of Organization resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: name
          in: query
          description: 'The name of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: phone
          in: query
          description: 'The phone of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: telecom
          in: query
          description: 'The telecom of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: address
          in: query
          description: 'The address of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: address-city
          in: query
          description: 'The address-city of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: address-postalcode
          in: query
          description: 'The address-postalcode of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: address-state
          in: query
          description: 'The address-state of the Organization resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Organization' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - fhir
      description: 'Adds a Organization resource.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: 'The json object for the Organization resource.'
              type: object
            example:
              id: 95f0e672-be37-4c73-95c9-649c2d200018
              meta:
                versionId: '1'
                lastUpdated: '2022-03-30T07:43:23+00:00'
              resourceType: Organization
              text:
                status: generated
                div: "<div xmlns='http://www.w3.org/1999/xhtml'> <p>Your Clinic Name Here</p></div>"
              identifier:
                -
                  system: 'http://hl7.org/fhir/sid/us-npi'
                  value: '1234567890'
              active: true
              type:
                -
                  coding: [{ system: 'http://terminology.hl7.org/CodeSystem/organization-type', code: prov, display: 'Healthcare Provider' }]
              name: 'Your Clinic Name Here Hey'
              telecom:
                -
                  system: phone
                  value: 000-000-0000
                  use: work
                -
                  system: fax
                  value: 000-000-0000
                  use: work
              address:
                - null
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 95f0e672-be37-4c73-95c9-649c2d200018
                  meta: { versionId: '1', lastUpdated: '2022-03-30T07:43:23+00:00' }
                  resourceType: Organization
                  text: { status: generated, div: "<div xmlns='http://www.w3.org/1999/xhtml'> <p>Your Clinic Name Here</p></div>" }
                  identifier: [{ system: 'http://hl7.org/fhir/sid/us-npi', value: '1234567890' }]
                  active: true
                  type: [{ coding: [{ system: 'http://terminology.hl7.org/CodeSystem/organization-type', code: prov, display: 'Healthcare Provider' }] }]
                  name: 'Your Clinic Name Here Now'
                  telecom: [{ system: phone, value: 000-000-0000, use: work }, { system: fax, value: 000-000-0000, use: work }]
                  address: [null]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Organization/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Organization resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Organization resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 95f0e672-be37-4c73-95c9-649c2d200018
                  meta: { versionId: '1', lastUpdated: '2022-03-30T07:43:23+00:00' }
                  resourceType: Organization
                  text: { status: generated, div: "<div xmlns='http://www.w3.org/1999/xhtml'> <p>Your Clinic Name Here</p></div>" }
                  identifier: [{ system: 'http://hl7.org/fhir/sid/us-npi', value: '1234567890' }]
                  active: true
                  type: [{ coding: [{ system: 'http://terminology.hl7.org/CodeSystem/organization-type', code: prov, display: 'Healthcare Provider' }] }]
                  name: 'Your Clinic Name Here'
                  telecom: [{ system: phone, value: 000-000-0000, use: work }, { system: fax, value: 000-000-0000, use: work }]
                  address: [null]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - fhir
      description: 'Modifies a Organization resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the organization.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: 'The json object for the Organization resource.'
              type: object
            example:
              id: 95f0e672-be37-4c73-95c9-649c2d200018
              meta:
                versionId: '1'
                lastUpdated: '2022-03-30T07:43:23+00:00'
              resourceType: Organization
              text:
                status: generated
                div: "<div xmlns='http://www.w3.org/1999/xhtml'> <p>Your Clinic Name Here</p></div>"
              identifier:
                -
                  system: 'http://hl7.org/fhir/sid/us-npi'
                  value: '1234567890'
              active: true
              type:
                -
                  coding: [{ system: 'http://terminology.hl7.org/CodeSystem/organization-type', code: prov, display: 'Healthcare Provider' }]
              name: 'Your Clinic Name Here'
              telecom:
                -
                  system: phone
                  value: 000-000-0000
                  use: work
                -
                  system: fax
                  value: 000-000-0000
                  use: work
              address:
                - null
      responses:
        '201':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                example:
                  id: 14
                  uuid: 95f217c1-258c-44ca-bf11-909dce369574
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Patient:
    get:
      tags:
        - fhir
      description: 'Returns a list of Patient resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: identifier
          in: query
          description: 'The identifier of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: name
          in: query
          description: 'The name of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: birthdate
          in: query
          description: 'The birthdate of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: gender
          in: query
          description: 'The gender of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: address
          in: query
          description: 'The address of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: address-city
          in: query
          description: 'The address-city of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: address-postalcode
          in: query
          description: 'The address-postalcode of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: address-state
          in: query
          description: 'The address-state of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: family
          in: query
          description: 'The family name of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: given
          in: query
          description: 'The given name of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: phone
          in: query
          description: 'The phone number of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: telecom
          in: query
          description: 'The fax number of the Patient resource.'
          required: false
          schema:
            type: string
        -
          $ref: '#/components/parameters/_lastUpdated'
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Patient' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - fhir
      description: 'Adds a Patient resource.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: 'The json object for the Patient resource.'
              type: object
            example:
              id: 95f22ff4-dd25-4290-8b52-1dd2fedf8e54
              meta:
                versionId: '1'
                lastUpdated: '2022-03-31T02:48:28+00:00'
              resourceType: Patient
              text:
                status: generated
                div: "<div xmlns='http://www.w3.org/1999/xhtml'> <p>Brenda Smith</p></div>"
              extension:
                -
                  valueCode: F
                  url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex'
                -
                  extension: [{ valueCoding: { system: 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor', code: UNK, display: Unknown }, url: ombCategory }, { valueString: Unknown, url: text }]
                  url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race'
              identifier:
                -
                  use: official
                  type: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: PT }] }
                  system: 'http://terminology.hl7.org/CodeSystem/v2-0203'
                  value: '1'
              active: true
              name:
                -
                  use: official
                  family: Smith
                  given: [Brenda]
              gender: female
              birthDate: '2017-03-10'
              communication:
                -
                  language: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/data-absent-reason', code: unknown, display: Unknown }] }
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 95f22ff4-dd25-4290-8b52-1dd2fedf8e54
                  meta: { versionId: '1', lastUpdated: '2022-03-31T02:48:28+00:00' }
                  resourceType: Patient
                  text: { status: generated, div: "<div xmlns='http://www.w3.org/1999/xhtml'> <p>Brenda Smith</p></div>" }
                  extension: [{ valueCode: F, url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex' }, { extension: [{ valueCoding: { system: 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor', code: UNK, display: Unknown }, url: ombCategory }, { valueString: Unknown, url: text }], url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race' }]
                  identifier: [{ use: official, type: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: PT }] }, system: 'http://terminology.hl7.org/CodeSystem/v2-0203', value: '1' }]
                  active: true
                  name: [{ use: official, family: Smith, given: [Brenda] }]
                  gender: female
                  birthDate: '2017-03-10'
                  communication: [{ language: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/data-absent-reason', code: unknown, display: Unknown }] } }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Patient/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Patient resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Patient resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 946da617-1a4a-4b2c-ae66-93b84377cb1e
                  meta: { versionId: '1', lastUpdated: '2021-09-21T17:08:03+00:00' }
                  resourceType: Patient
                  text: { status: generated, div: '<div xmlns="http://www.w3.org/1999/xhtml"> <p>Aurore252 Von197</p></div>' }
                  extension: [{ valueCode: F, url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex' }, { extension: [{ valueCoding: { system: 'urn:oid:2.16.840.1.113883.6.238', code: 1006-6, display: Abenaki }, url: ombCategory }, { valueString: Abenaki, url: text }], url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race' }, { extension: [{ valueString: 'Declined To Specify', url: text }], url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity' }]
                  identifier: [{ use: official, type: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: PT }] }, system: 'http://terminology.hl7.org/CodeSystem/v2-0203', value: '1' }]
                  active: true
                  name: [{ use: official, family: Von197, given: [Aurore252] }]
                  gender: female
                  birthDate: '1970-07-03'
                  address: [{ line: ['245 Crona Wall'], city: Boston, state: Massachusetts, postalCode: '02215', period: { start: '2020-09-21T17:08:03.532+00:00' } }]
                  communication: [{ language: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/data-absent-reason', code: unknown, display: Unknown }] } }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - fhir
      description: 'Modifies a Patient resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Patient resource.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: 'The json object for the Patient resource.'
              type: object
            example:
              id: 95f22ff4-dd25-4290-8b52-1dd2fedf8e54
              meta:
                versionId: '1'
                lastUpdated: '2022-03-31T02:48:28+00:00'
              resourceType: Patient
              text:
                status: generated
                div: "<div xmlns='http://www.w3.org/1999/xhtml'> <p>Brenda Smith</p></div>"
              extension:
                -
                  valueCode: F
                  url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex'
                -
                  extension: [{ valueCoding: { system: 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor', code: UNK, display: Unknown }, url: ombCategory }, { valueString: Unknown, url: text }]
                  url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race'
              identifier:
                -
                  use: official
                  type: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: PT }] }
                  system: 'http://terminology.hl7.org/CodeSystem/v2-0203'
                  value: '1'
              active: true
              name:
                -
                  use: official
                  family: Smith
                  given: [Brenda]
              gender: female
              birthDate: '2017-03-10'
              communication:
                -
                  language: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/data-absent-reason', code: unknown, display: Unknown }] }
      responses:
        '201':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                example:
                  id: 2
                  uuid: 95f2ad04-5834-4243-8838-e396a7faadbf
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Patient/$export:
    get:
      tags:
        - fhir
      description: "The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
      responses:
        '200':
          description: "The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Person:
    get:
      tags:
        - fhir
      description: 'Returns a list of Person resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Person resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: name
          in: query
          description: 'The name of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: active
          in: query
          description: 'The active status of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: address
          in: query
          description: 'The address of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: address-city
          in: query
          description: 'The address-city of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: address-postalcode
          in: query
          description: 'The address-postalcode of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: address-state
          in: query
          description: 'The address-state of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: family
          in: query
          description: 'The family name of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: given
          in: query
          description: 'The given name of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: phone
          in: query
          description: 'The phone number of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: telecom
          in: query
          description: 'The fax number of the Person resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Person' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Person/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Person resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Person resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 960c7cd6-187a-4119-8cd4-85389d80efb9
                  meta: { versionId: '1', lastUpdated: '2022-04-13T08:57:32+00:00' }
                  resourceType: Person
                  text: { status: generated, div: "<div xmlns='http://www.w3.org/1999/xhtml'> <p>Administrator Administrator</p></div>" }
                  name: [{ use: official, family: Administrator, given: [Administrator, Larry] }]
                  telecom: [{ system: phone, value: '1234567890', use: home }, { system: phone, value: '1234567890', use: work }, { system: phone, value: '1234567890', use: mobile }, { system: email, value: hey@hey.com, use: home }]
                  address: [{ line: ['123 Lane Street'], city: Bellevue, state: WA, period: { start: '2021-04-13T08:57:32.146+00:00' } }]
                  active: true
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/Practitioner:
    get:
      tags:
        - fhir
      description: 'Returns a list of Practitioner resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: name
          in: query
          description: 'The name of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: active
          in: query
          description: 'The active status of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: address
          in: query
          description: 'The address of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: address-city
          in: query
          description: 'The address-city of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: address-postalcode
          in: query
          description: 'The address-postalcode of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: address-state
          in: query
          description: 'The address-state of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: family
          in: query
          description: 'The family name of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: given
          in: query
          description: 'The given name of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: phone
          in: query
          description: 'The phone number of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: telecom
          in: query
          description: 'The fax number of the Practitioner resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Practitioner' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - fhir
      description: 'Adds a Practitioner resources.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: 'The json object for the Practitioner resource.'
              type: object
            example:
              id: 9473b0cf-e969-4eaa-8044-51037767fa4f
              meta:
                versionId: '1'
                lastUpdated: '2021-09-21T17:41:57+00:00'
              resourceType: Practitioner
              text:
                status: generated
                div: '<div xmlns="http://www.w3.org/1999/xhtml"> <p>Billy Smith</p></div>'
              identifier:
                -
                  system: 'http://hl7.org/fhir/sid/us-npi'
                  value: '11223344554543'
              active: true
              name:
                -
                  use: official
                  family: Smith
                  given: [Danny]
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 9473b0cf-e969-4eaa-8044-51037767fa4f
                  meta: { versionId: '1', lastUpdated: '2021-09-21T17:41:57+00:00' }
                  resourceType: Practitioner
                  text: { status: generated, div: '<div xmlns="http://www.w3.org/1999/xhtml"> <p>Billy Smith</p></div>' }
                  identifier: [{ system: 'http://hl7.org/fhir/sid/us-npi', value: '11223344554543' }]
                  active: true
                  name: [{ use: official, family: Smith, given: [Danny] }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Practitioner/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Practitioner resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Practitioner resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 9473b0cf-e969-4eaa-8044-51037767fa4f
                  meta: { versionId: '1', lastUpdated: '2021-09-21T17:41:57+00:00' }
                  resourceType: Practitioner
                  text: { status: generated, div: '<div xmlns="http://www.w3.org/1999/xhtml"> <p>Billy Smith</p></div>' }
                  identifier: [{ system: 'http://hl7.org/fhir/sid/us-npi', value: '11223344554543' }]
                  active: true
                  name: [{ use: official, family: Smith, given: [Billy] }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - fhir
      description: 'Modify a Practitioner resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Practitioner resource.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: 'The json object for the Practitioner resource.'
              type: object
            example:
              id: 9473b0cf-e969-4eaa-8044-51037767fa4f
              meta:
                versionId: '1'
                lastUpdated: '2021-09-21T17:41:57+00:00'
              resourceType: Practitioner
              text:
                status: generated
                div: '<div xmlns="http://www.w3.org/1999/xhtml"> <p>Billy Smith</p></div>'
              identifier:
                -
                  system: 'http://hl7.org/fhir/sid/us-npi'
                  value: '11223344554543'
              active: true
              name:
                -
                  use: official
                  family: Smith
                  given: [Billy]
      responses:
        '201':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                example:
                  id: 5
                  uuid: 95f294d7-e14c-441d-81a6-309fe369ee21
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/PractitionerRole:
    get:
      tags:
        - fhir
      description: 'Returns a list of PractitionerRole resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the PractitionerRole resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: specialty
          in: query
          description: 'The specialty of the PractitionerRole resource.'
          required: false
          schema:
            type: string
        -
          name: practitioner
          in: query
          description: 'The practitioner of the PractitionerRole resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/PractitionerRole' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/PractitionerRole/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single PractitionerRole resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the PractitionerRole resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 960c806f-9463-482e-b228-67b5be1fed55
                  meta: { versionId: '1', lastUpdated: '2022-04-13T06:18:17+00:00' }
                  resourceType: PractitionerRole
                  practitioner: { reference: Practitioner/960c7cd6-187a-4119-8cd4-85389d80efb9, display: 'Administrator Administrator' }
                  organization: { reference: Organization/960c7cc6-b4ae-49bc-877b-1a2913271c43, display: 'Your Clinic Name Here' }
                  code: [{ coding: [102L00000X], text: Psychoanalyst }, { coding: [101Y00000X], text: Counselor }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/Procedure:
    get:
      tags:
        - fhir
      description: 'Returns a list of Procedure resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Procedure resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: date
          in: query
          description: 'The datetime of the Procedure resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Procedure' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Procedure/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Procedure resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Procedure resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 95e9d3fb-fe7b-448a-aa60-d40b11b486a5
                  meta: { versionId: '1', lastUpdated: '2022-03-26T17:20:14+00:00' }
                  resourceType: Procedure
                  status: in-progress
                  subject: { reference: Patient/95e8d830-3068-48cf-930a-2fefb18c2bcf, type: Patient }
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  '/fhir/Provenance/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Provenance resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The id for the Provenance resource. Format is \<resource name\>:\<uuid\> (Example: AllergyIntolerance:95ea43f3-1066-4bc7-b224-6c23b985f145).'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  id: 'AllergyIntolerance:95ea43f3-1066-4bc7-b224-6c23b985f145'
                  resourceType: Provenance
                  target: [{ reference: AllergyIntolerance/95ea43f3-1066-4bc7-b224-6c23b985f145, type: AllergyIntolerance }]
                  recorded: '2022-03-26T22:43:30+00:00'
                  agent: { '0': { type: { coding: [{ system: 'http://terminology.hl7.org/CodeSystem/provenance-participant-type', code: author, display: Author }] }, who: { reference: Organization/95e8d810-7e55-44aa-bb48-fecd5b0d88c7, type: Organization }, onBehalfOf: { reference: Organization/95e8d810-7e55-44aa-bb48-fecd5b0d88c7, type: Organization } }, '1': { type: { coding: [{ system: 'http://hl7.org/fhir/us/core/CodeSystem/us-core-provenance-participant-type', code: transmitter, display: Transmitter }] } }, who: { reference: Organization/95e8d810-7e55-44aa-bb48-fecd5b0d88c7, type: Organization }, onBehalfOf: { reference: Organization/95e8d810-7e55-44aa-bb48-fecd5b0d88c7, type: Organization } }
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/Provenance:
    get:
      tags:
        - fhir
      description: 'Returns a list of Provenance resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The id for the Provenance resource. Format is \<resource name\>:\<uuid\> (Example: AllergyIntolerance:95ea43f3-1066-4bc7-b224-6c23b985f145).'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/Provenance' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/ValueSet:
    get:
      tags:
        - fhir
      description: 'Returns a list of ValueSet resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the ValueSet resource.'
          required: false
          schema:
            type: string
        -
          name: _lastUpdated
          in: query
          description: 'Allows filtering resources by the _lastUpdated field. A FHIR Instant value in the format YYYY-MM-DDThh:mm:ss.sss+zz:zz.  See FHIR date/time modifiers for filtering options (ge,gt,le, etc)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  meta: { lastUpdated: '2021-09-14T09:13:51' }
                  resourceType: Bundle
                  type: collection
                  total: 0
                  link: [{ relation: self, url: 'https://localhost:9300/apis/default/fhir/ValueSet' }]
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/ValueSet/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single ValueSet resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the ValueSet resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  resourceType: ValueSet
                  id: appointment-type
                  compose: { include: [{ concept: [{ code: no_show, display: 'No Show' }, { code: office_visit, display: 'Office Visit' }, { code: established_patient, display: 'Established Patient' }, { code: new_patient, display: 'New Patient' }, { code: health_and_behavioral_assessment, display: 'Health and Behavioral Assessment' }, { code: preventive_care_services, display: 'Preventive Care Services' }, { code: ophthalmological_services, display: 'Ophthalmological Services' }] }] }
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/uuidnotfound'
      security:
        -
          openemr_auth: []
  /fhir/metadata:
    get:
      tags:
        - fhir
      description: 'Returns metadata (ie. CapabilityStatement resource) of the fhir server.'
      responses:
        '200':
          description: 'Return CapabilityStatement resource of the fhir server'
  /fhir/.well-known/smart-configuration:
    get:
      tags:
        - fhir
      description: 'Returns smart configuration of the fhir server.'
      responses:
        '200':
          description: 'Return smart configuration of the fhir server'
  /fhir/OperationDefinition:
    get:
      tags:
        - fhir
      description: 'Returns a list of the OperationDefinition resources that are specific to this OpenEMR installation'
      responses:
        '200':
          description: 'Return list of OperationDefinition resources'
  '/fhir/OperationDefinition/{operation}':
    get:
      tags:
        - fhir
      description: 'Returns a single OperationDefinition resource that is specific to this OpenEMR installation'
      parameters:
        -
          name: operation
          in: path
          description: 'The name of the operation to query. For example $bulkdata-status'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Standard Response'
          content:
            application/json:
              schema:
                properties:
                  'json object': { description: 'FHIR Json object.', type: object }
                type: object
                example:
                  resourceType: OperationDefinition
                  name: $bulkdata-status
                  status: active
                  kind: operation
                  parameter: [{ name: job, use: in, min: 1, max: 1, type: { system: 'http://hl7.org/fhir/data-types', code: string, display: string }, searchType: { system: 'http://hl7.org/fhir/ValueSet/search-param-type', code: string, display: string } }]
  /fhir/$export:
    get:
      tags:
        - fhir
      description: "The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
      responses:
        '200':
          description: "The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/$bulkdata-status:
    get:
      tags:
        - fhir
      description: "The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
      responses:
        '200':
          description: "The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - fhir
      description: "The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
      responses:
        '200':
          description: "The BULK FHIR Exports documentation can be found at <a href='https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API' target='_blank' rel='noopener'>https://www.open-emr.org/wiki/index.php/OpenEMR_Wiki_Home_Page#API</a>"
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /portal/patient:
    get:
      tags:
        - standard-patient
      description: 'Returns the patient.'
      responses:
        '200':
          description: 'Standard response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_patient_response'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /portal/patient/encounter:
    get:
      tags:
        - standard-patient
      description: 'Returns encounters for the patient.'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/portal/patient/encounter/{euuid}':
    get:
      tags:
        - standard-patient
      description: 'Returns a selected encounter by its uuid.'
      parameters:
        -
          name: euuid
          in: path
          description: 'The uuid for the encounter.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /portal/patient/appointment:
    get:
      tags:
        - standard-patient
      description: 'Retrieves all appointments for a patient'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/portal/patient/appointment/{auuid}':
    get:
      tags:
        - standard-patient
      description: 'Returns a selected appointment by its uuid.'
      parameters:
        -
          name: auuid
          in: path
          description: 'The uuid for the appointment.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '400':
          $ref: '#/components/responses/badrequest'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
components:
  schemas:
    api_patient_request:
      description: 'Schema for the patient request'
      required:
        - fname
        - lname
        - DOB
        - sex
      properties:
        title:
          description: 'The title of patient.'
          type: string
        fname:
          description: 'The fname of patient.'
          type: string
        mname:
          description: 'The mname of patient.'
          type: string
        lname:
          description: 'The lname of patient.'
          type: string
        street:
          description: 'The street address of patient.'
          type: string
        postal_code:
          description: 'The postal code of patient.'
          type: string
        city:
          description: 'The city of patient.'
          type: string
        state:
          description: 'The state of patient.'
          type: string
        country_code:
          description: 'The country code of patient.'
          type: string
        phone_contact:
          description: 'The phone contact of patient.'
          type: string
        DOB:
          description: 'The DOB of patient.'
          type: string
        sex:
          description: 'The lname of patient.'
          type: string
        race:
          description: 'The race of patient.'
          type: string
        ethnicity:
          description: 'The ethnicity of patient.'
          type: string
      type: object
      example:
        title: Mr
        fname: Foo
        mname: ''
        lname: Bar
        street: '456 Tree Lane'
        postal_code: '08642'
        city: FooTown
        state: FL
        country_code: US
        phone_contact: 123-456-7890
        DOB: '1992-02-02'
        sex: Male
        race: ''
        ethnicity: ''
    api_patient_response:
      description: 'Schema for the patient response'
      properties:
        validationErrors:
          description: 'Validation errors.'
          type: array
          items:
            type: object
        internalErrors:
          description: 'Internal errors.'
          type: array
          items:
            type: object
        data:
          description: 'Returned data.'
          type: array
          items:
            properties:
              id:
                description: 'patient id'
                type: string
              pid:
                description: 'patient pid'
                type: string
              pubpid:
                description: 'patient public id'
                type: string
              title:
                description: 'patient title'
                type: string
              fname:
                description: 'patient first name'
                type: string
              mname:
                description: 'patient middle name'
                type: string
              lname:
                description: 'patient last name'
                type: string
              ss:
                description: 'patient social security number'
                type: string
              street:
                description: 'patient street address'
                type: string
              postal_code:
                description: 'patient postal code'
                type: string
              city:
                description: 'patient city'
                type: string
              state:
                description: 'patient state'
                type: string
              county:
                description: 'patient county'
                type: string
              country_code:
                description: 'patient country code'
                type: string
              drivers_license:
                description: 'patient drivers license id'
                type: string
              contact_relationship:
                description: 'patient contact relationship'
                type: string
              phone_contact:
                description: 'patient phone contact'
                type: string
              phone_home:
                description: 'patient home phone'
                type: string
              phone_biz:
                description: 'patient work phone'
                type: string
              phone_cell:
                description: 'patient mobile phone'
                type: string
              email:
                description: 'patient email'
                type: string
              DOB:
                description: 'patient DOB'
                type: string
              sex:
                description: 'patient sex (gender)'
                type: string
              race:
                description: 'patient race'
                type: string
              ethnicity:
                description: 'patient ethnicity'
                type: string
              status:
                description: 'patient status'
                type: string
            type: object
      type: object
      example:
        validationErrors: []
        error_description: []
        data:
          id: '193'
          pid: '1'
          pubpid: ''
          title: Mr
          fname: Baz
          mname: ''
          lname: Bop
          ss: ''
          street: '456 Tree Lane'
          postal_code: '08642'
          city: FooTown
          state: FL
          county: ''
          country_code: US
          drivers_license: ''
          contact_relationship: ''
          phone_contact: 123-456-7890
          phone_home: ''
          phone_biz: ''
          phone_cell: ''
          email: ''
          DOB: '1992-02-03'
          sex: Male
          race: ''
          ethnicity: ''
          status: ''
    api_encounter_request:
      description: 'Schema for the encounter request'
      required:
        - pc_catid
        - class_code
      properties:
        date:
          description: 'The date of encounter.'
          type: string
        onset_date:
          description: 'The onset date of encounter.'
          type: string
        reason:
          description: 'The reason of encounter.'
          type: string
        facility:
          description: 'The facility of encounter.'
          type: string
        pc_catid:
          description: 'The pc_catid of encounter.'
          type: string
        facility_id:
          description: 'The facility id of encounter.'
          type: string
        billing_facility:
          description: 'The billing facility id of encounter.'
          type: string
        sensitivity:
          description: 'The sensitivity of encounter.'
          type: string
        referral_source:
          description: 'The referral source of encounter.'
          type: string
        pos_code:
          description: 'The pos_code of encounter.'
          type: string
        external_id:
          description: 'The external id of encounter.'
          type: string
        provider_id:
          description: 'The provider id of encounter.'
          type: string
        class_code:
          description: 'The class_code of encounter.'
          type: string
      type: object
      example:
        date: '2020-11-10'
        onset_date: ''
        reason: 'Pregnancy Test'
        facility: 'Owerri General Hospital'
        pc_catid: '5'
        facility_id: '3'
        billing_facility: '3'
        sensitivity: normal
        referral_source: ''
        pos_code: '0'
        external_id: ''
        provider_id: '1'
        class_code: AMB
    api_encounter_response:
      description: 'Schema for the encounter response'
      properties:
        validationErrors:
          description: 'Validation errors.'
          type: array
          items:
            type: object
        internalErrors:
          description: 'Internal errors.'
          type: array
          items:
            type: object
        data:
          description: 'Returned data.'
          type: array
          items:
            properties:
              id:
                description: 'encounter id'
                type: string
              uuid:
                description: 'encounter uuid'
                type: string
              date:
                description: 'encounter date'
                type: string
              reason:
                description: 'encounter reason'
                type: string
              facility:
                description: 'encounter facility name'
                type: string
              facility_id:
                description: 'encounter facility id name'
                type: string
              pid:
                description: 'encounter for patient pid'
                type: string
              onset_date:
                description: 'encounter onset date'
                type: string
              sensitivity:
                description: 'encounter sensitivity'
                type: string
              billing_note:
                description: 'encounter billing note'
                type: string
              pc_catid:
                description: 'encounter pc_catid'
                type: string
              last_level_billed:
                description: 'encounter last_level_billed'
                type: string
              last_level_closed:
                description: 'encounter last_level_closed'
                type: string
              last_stmt_date:
                description: 'encounter last_stmt_date'
                type: string
              stmt_count:
                description: 'encounter stmt_count'
                type: string
              provider_id:
                description: 'provider id'
                type: string
              supervisor_id:
                description: 'encounter supervisor id'
                type: string
              invoice_refno:
                description: 'encounter invoice_refno'
                type: string
              referral_source:
                description: 'encounter referral source'
                type: string
              billing_facility:
                description: 'encounter billing facility id'
                type: string
              external_id:
                description: 'encounter external id'
                type: string
              pos_code:
                description: 'encounter pos_code'
                type: string
              class_code:
                description: 'encounter class_code'
                type: string
              class_title:
                description: 'encounter class_title'
                type: string
              pc_catname:
                description: 'encounter pc_catname'
                type: string
              billing_facility_name:
                description: 'encounter billing facility name'
                type: string
            type: object
      type: object
      example:
        validationErrors: []
        error_description: []
        data:
          id: '1'
          uuid: 90c196f2-51cc-4655-8858-3a80aebff3ef
          date: '2019-09-14 00:00:00'
          reason: 'Pregnancy Test'
          facility: 'Owerri General Hospital'
          facility_id: '3'
          pid: '1'
          onset_date: '2019-04-20 00:00:00'
          sensitivity: normal
          billing_note: null
          pc_catid: '5'
          last_level_billed: '0'
          last_level_closed: '0'
          last_stmt_date: null
          stmt_count: '0'
          provider_id: '1'
          supervisor_id: '0'
          invoice_refno: ''
          referral_source: ''
          billing_facility: '3'
          external_id: ''
          pos_code: '0'
          class_code: AMB
          class_title: ambulatory
          pc_catname: 'Office Visit'
          billing_facility_name: 'Owerri General Hospital'
    api_vital_request:
      description: 'Schema for the vital request'
      properties:
        bps:
          description: 'The bps of vitals.'
          type: string
        bpd:
          description: 'The bpd of vitals.'
          type: string
        weight:
          description: 'The weight of vitals. (unit is lb)'
          type: string
        height:
          description: 'The height of vitals. (unit is inches)'
          type: string
        temperature:
          description: 'The temperature of temperature. (unit is F)'
          type: string
        temp_method:
          description: 'The temp_method of vitals.'
          type: string
        pulse:
          description: 'The pulse of vitals.'
          type: string
        respiration:
          description: 'The respiration of vitals.'
          type: string
        note:
          description: 'The note (ie. comments) of vitals.'
          type: string
        waist_circ:
          description: 'The waist circumference of vitals. (unit is inches)'
          type: string
        head_circ:
          description: 'The head circumference of vitals. (unit is inches)'
          type: string
        oxygen_saturation:
          description: 'The oxygen_saturation of vitals.'
          type: string
      type: object
      example:
        bps: '130'
        bpd: '80'
        weight: '220'
        height: '70'
        temperature: '98'
        temp_method: Oral
        pulse: '60'
        respiration: '20'
        note: 'Patient with difficulty standing, which made weight measurement difficult.'
        waist_circ: '37'
        head_circ: '22.2'
        oxygen_saturation: '96'
    api_soap_note_request:
      description: 'Schema for the soap_note request'
      properties:
        subjective:
          description: 'The subjective of soap note.'
          type: string
        objective:
          description: 'The objective of soap note.'
          type: string
        assessment:
          description: 'The assessment of soap note.'
          type: string
        plan:
          description: 'The plan of soap note.'
          type: string
      type: object
      example:
        subjective: 'The patient with mechanical fall and cut finger.'
        objective: 'The patient with finger laceration on exam.'
        assessment: 'The patient with finger laceration requiring sutures.'
        plan: 'Sutured finger laceration.'
    api_medical_problem_request:
      description: 'Schema for the medical_problem request'
      required:
        - title
        - begdate
      properties:
        title:
          description: 'The title of medical problem.'
          type: string
        begdate:
          description: 'The beginning date of medical problem.'
          type: string
        enddate:
          description: 'The end date of medical problem.'
          type: string
        diagnosis:
          description: 'The diagnosis of medical problem. In format `<codetype>:<code>`'
          type: string
      type: object
      example:
        title: Dermatochalasis
        begdate: '2010-10-13'
        enddate: null
        diagnosis: 'ICD10:H02.839'
    api_allergy_request:
      description: 'Schema for the allergy request'
      required:
        - title
        - begdate
      properties:
        title:
          description: 'The title of allergy.'
          type: string
        begdate:
          description: 'The beginning date of allergy.'
          type: string
        enddate:
          description: 'The end date of allergy.'
          type: string
        diagnosis:
          description: 'The diagnosis of allergy. In format `<codetype>:<code>`'
          type: string
      type: object
      example:
        title: Iodine
        begdate: '2010-10-13'
        enddate: null
    api_medication_request:
      description: 'Schema for the medication request'
      required:
        - title
        - begdate
      properties:
        title:
          description: 'The title of medication.'
          type: string
        begdate:
          description: 'The beginning date of medication.'
          type: string
        enddate:
          description: 'The end date of medication.'
          type: string
        diagnosis:
          description: 'The diagnosis of medication. In format `<codetype>:<code>`'
          type: string
      type: object
      example:
        title: Norvasc
        begdate: '2013-04-13'
        enddate: null
    api_surgery_request:
      description: 'Schema for the surgery request'
      required:
        - title
        - begdate
      properties:
        title:
          description: 'The title of surgery.'
          type: string
        begdate:
          description: 'The beginning date of surgery.'
          type: string
        enddate:
          description: 'The end date of surgery.'
          type: string
        diagnosis:
          description: 'The diagnosis of surgery. In format `<codetype>:<code>`'
          type: string
      type: object
      example:
        title: Blepharoplasty
        begdate: '2013-10-14'
        enddate: null
        diagnosis: 'CPT4:15823-50'
    api_dental_issue_request:
      description: 'Schema for the dental_issue request'
      required:
        - title
        - begdate
      properties:
        title:
          description: 'The title of dental issue.'
          type: string
        begdate:
          description: 'The beginning date of dental issue.'
          type: string
        enddate:
          description: 'The end date of dental issue.'
          type: string
        diagnosis:
          description: 'The diagnosis of dental issue. In format `<codetype>:<code>`'
          type: string
      type: object
      example:
        title: Halitosis
        begdate: '2015-03-17'
        enddate: null
    api_insurance_company_request:
      description: 'Schema for the insurance_company request'
      required:
        - name
      properties:
        name:
          description: 'The name of insurance company.'
          type: string
        attn:
          description: 'The attn of insurance company.'
          type: string
        cms_id:
          description: 'The cms id of insurance company.'
          type: string
        ins_type_code:
          description: 'The insurance type code of insurance company. The insurance type code can be found by inspecting the route at (/api/insurance_type).'
          type: string
        x12_receiver_id:
          description: 'The x12 receiver id of insurance company.'
          type: string
        x12_default_partner_id:
          description: 'The x12 default partner id of insurance company.'
          type: string
        alt_cms_id:
          description: 'The alternate cms id of insurance company.'
          type: string
        line1:
          description: 'The line1 address of insurance company.'
          type: string
        line2:
          description: 'The line2 address of insurance company.'
          type: string
        city:
          description: 'The city of insurance company.'
          type: string
        state:
          description: 'The state of insurance company.'
          type: string
        zip:
          description: 'The zip of insurance company.'
          type: string
        country:
          description: 'The country of insurance company.'
          type: string
      type: object
      example:
        name: 'Cool Insurance Company'
        attn: null
        cms_id: null
        ins_type_code: '2'
        x12_receiver_id: null
        x12_default_partner_id: null
        alt_cms_id: ''
        line1: '123 Cool Lane'
        line2: 'Suite 123'
        city: Cooltown
        state: CA
        zip: '12245'
        country: USA
    api_insurance_request:
      description: "Schema for the insurance request.  Note the following additional validation checks on the request.\nIf the subscriber_relationship value is of type 'self' then the subscriber_fname and subscriber_lname fields\nmust match the patient's first and last name or a patient's previous first and last name.\n\nIf the subscriber_relationship value is of type 'self' then the subscriber_ss field must match the patient's\nsocial security number.\n\nIf the subscriber_relationship value is not of type 'self' then the subscriber_ss field MUST not be the current patient's social security number.\n\nIf the system's global configuration permits only a single insurance type option then any insurance rquest where the type is NOT 'primary' will fail.\n\nAn insurance is considered the current policy for the policy type if the policy date_end field is null.  Only one of these records per policy type can exist for a patient."
      required:
        - provider
        - policy_number
        - subscriber_fname
        - subscriber_lname
        - subscriber_relationship
        - subscriber_ss
        - subscriber_DOB
        - subscriber_street
        - subscriber_postal_code
        - subscriber_city
        - subscriber_state
        - subscriber_sex
        - accept_assignment
      properties:
        provider:
          description: 'The insurance company id.'
          type: string
        plan_name:
          description: 'The plan name of insurance. (2-255 characters)'
          type: string
        policy_number:
          description: 'The policy number of insurance. (2-255 characters)'
          type: string
        group_number:
          description: 'The group number of insurance.(2-255 characters)'
          type: string
        subscriber_lname:
          description: 'The subscriber last name of insurance.(2-255 characters).'
          type: string
        subscriber_mname:
          description: 'The subscriber middle name of insurance.'
          type: string
        subscriber_fname:
          description: 'The subscriber first name of insurance.'
          type: string
        subscriber_relationship:
          description: 'The subscriber relationship of insurance. `subscriber_relationship` can be found by querying `resource=/api/list/subscriber_relationship`'
          type: string
        subscriber_ss:
          description: 'The subscriber ss number of insurance.'
          type: string
        subscriber_DOB:
          description: 'The subscriber DOB of insurance.'
          type: string
        subscriber_street:
          description: 'The subscriber street address of insurance.'
          type: string
        subscriber_postal_code:
          description: 'The subscriber postal code of insurance.'
          type: string
        subscriber_city:
          description: 'The subscriber city of insurance.'
          type: string
        subscriber_state:
          description: 'The subscriber state of insurance. `state` can be found by querying `resource=/api/list/state`'
          type: string
        subscriber_country:
          description: 'The subscriber country of insurance. `country` can be found by querying `resource=/api/list/country`'
          type: string
        subscriber_phone:
          description: 'The subscriber phone of insurance.'
          type: string
        subscriber_employer:
          description: 'The subscriber employer of insurance.'
          type: string
        subscriber_employer_street:
          description: 'The subscriber employer street of insurance.'
          type: string
        subscriber_employer_postal_code:
          description: 'The subscriber employer postal code of insurance.'
          type: string
        subscriber_employer_state:
          description: 'The subscriber employer state of insurance.'
          type: string
        subscriber_employer_country:
          description: 'The subscriber employer country of insurance.'
          type: string
        subscriber_employer_city:
          description: 'The subscriber employer city of insurance.'
          type: string
        copay:
          description: 'The copay of insurance.'
          type: string
        date:
          description: "The effective date of insurance in YYYY-MM-DD format.  This value cannot be after the date_end property and cannot be the same date as any other insurance policy for the same insurance type ('primary, 'secondary', etc)."
          type: string
        date_end:
          description: 'The effective end date of insurance in YYYY-MM-DD format.  This value cannot be before the date property. If it is null then this policy is the current policy for this policy type for the patient.  There can only be one current policy per type and the request will fail if there is already a current policy for this type.'
          type: string
        subscriber_sex:
          description: 'The subscriber sex of insurance.'
          type: string
        accept_assignment:
          description: 'The accept_assignment of insurance.'
          type: string
        policy_type:
          description: 'The 837p list of policy types for an insurance.  See src/Billing/InsurancePolicyType.php for the list of valid values.'
          type: string
        type:
          description: "The type or category of OpenEMR insurance policy, 'primary', 'secondary', or 'tertiary'. If this field is missing it will default to 'primary'."
          type: string
      type: object
      example:
        provider: '33'
        plan_name: 'Some Plan'
        policy_number: '12345'
        group_number: '252412'
        subscriber_lname: Tester
        subscriber_mname: Xi
        subscriber_fname: Foo
        subscriber_relationship: other
        subscriber_ss: '234231234'
        subscriber_DOB: '2018-10-03'
        subscriber_street: '183 Cool St'
        subscriber_postal_code: '23418'
        subscriber_city: Cooltown
        subscriber_state: AZ
        subscriber_country: USA
        subscriber_phone: 234-598-2123
        subscriber_employer: 'Some Employer'
        subscriber_employer_street: '123 Heather Lane'
        subscriber_employer_postal_code: '23415'
        subscriber_employer_state: AZ
        subscriber_employer_country: USA
        subscriber_employer_city: Cooltown
        copay: '35'
        date: '2018-10-15'
        subscriber_sex: Female
        accept_assignment: 'TRUE'
        policy_type: a
        type: primary
    api_message_request:
      description: 'Schema for the message request'
      required:
        - body
        - groupname
        - from
        - to
        - title
        - message_status
      properties:
        body:
          description: 'The body of message.'
          type: string
        groupname:
          description: "The group name (usually is 'Default')."
          type: string
        from:
          description: 'The sender of the message.'
          type: string
        to:
          description: 'The recipient of the message.'
          type: string
        title:
          description: 'use an option from resource=/api/list/note_type'
          type: string
        message_status:
          description: 'use an option from resource=/api/list/message_status'
          type: string
      type: object
      example:
        body: 'Test 456'
        groupname: Default
        from: Matthew
        to: admin
        title: Other
        message_status: New
    api_transaction_request:
      description: 'Schema for the transaction request'
      required:
        - message
        - groupname
        - title
      properties:
        message:
          description: 'The message of the transaction.'
          type: string
        type:
          description: 'The type of transaction. Use an option from resource=/api/transaction_type'
          type: string
        groupname:
          description: "The group name (usually is 'Default')."
          type: string
        referByNpi:
          description: 'NPI of the person creating the referral.'
          type: string
        referToNpi:
          description: 'NPI of the person getting the referral.'
          type: string
        referDiagnosis:
          description: 'The referral diagnosis.'
          type: string
        riskLevel:
          description: 'The risk level. (Low, Medium, High)'
          type: string
        includeVitals:
          description: 'Are vitals included (0,1)'
          type: string
        referralDate:
          description: 'The date of the referral'
          type: string
        authorization:
          description: 'The authorization for the referral'
          type: string
        visits:
          description: 'The number of vists for the referral'
          type: string
        validFrom:
          description: 'The date the referral is valid from'
          type: string
        validThrough:
          description: 'The date the referral is valid through'
          type: string
      type: object
      example:
        message: Message
        type: LBTref
        groupname: Default
        referByNpi: '9999999999'
        referToNpi: '9999999999'
        referDiagnosis: 'Diag 1'
        riskLevel: Low
        includeVitals: '1'
        referralDate: '2022-01-01'
        authorization: Auth_123
        visits: '1'
        validFrom: '2022-01-02'
        validThrough: '2022-01-03'
        body: 'Reason 1'
  responses:
    standard:
      description: 'Standard Response'
      content:
        application/json:
          schema:
            properties:
              validationErrors:
                description: 'Validation errors.'
                type: array
                items:
                  type: object
              internalErrors:
                description: 'Internal errors.'
                type: array
                items:
                  type: object
              data:
                description: 'Returned data.'
                type: array
                items:
                  type: object
            type: object
            example:
              validationErrors: []
              error_description: []
              data: []
    badrequest:
      description: 'Bad Request'
      content:
        application/json:
          schema:
            properties:
              validationErrors:
                description: 'Validation errors.'
                type: object
            type: object
            example:
              validationErrors:
                _id: 'The search field argument was invalid, improperly formatted, or could not be parsed.  Inner message: UUID columns must be a valid UUID string'
    unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            properties:
              error:
                description: 'The error.'
                type: string
              error_description:
                description: 'The description of the error.'
                type: string
              hint:
                description: 'More specific information on the error.'
                type: string
              message:
                description: 'Message regarding the error.'
                type: string
            type: object
            example:
              error: access_denied
              error_description: 'The resource owner or authorization server denied the request.'
              hint: 'Missing "Authorization" header'
              message: 'The resource owner or authorization server denied the request.'
    uuidnotfound:
      description: 'Not Found'
      content:
        application/json:
          schema:
            properties:
              empty:
                description: empty
                type: object
            type: object
            example: []
  parameters:
    _sort:
      name: _sort
      in: query
      description: 'The sort criteria specified in comma separated order with Descending order being specified by a dash before the search parameter name. (Example: name,-category)'
      required: false
      schema:
        type: string
    _lastUpdated:
      name: _lastUpdated
      in: query
      description: 'The date the resource was last updated.'
      required: false
      schema:
        type: string
  securitySchemes:
    openemr_auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/default/authorize
          tokenUrl: /oauth2/default/token
          refreshUrl: /oauth2/default/token
          scopes:
            openid: 'Generic mandatory scope'
            offline_access: 'Will signal server to provide a refresh token'
            launch/patient: 'Will provide a patient selector when logging in as an OpenEMR user (required for testing patient/* scopes in swagger if not logging in as a patient)'
            'api:fhir': 'FHIR R4 API'
            patient/AllergyIntolerance.read: 'Read allergy intolerance resources for the current patient (api:fhir)'
            patient/Appointment.read: 'Read appointment resources for the current patient (api:fhir)'
            patient/Binary.read: 'Read binary document resources for the current patient (api:fhir)'
            patient/CarePlan.read: 'Read care plan resources for the current patient (api:fhir)'
            patient/CareTeam.read: 'Read care team resources for the current patient (api:fhir)'
            patient/Condition.read: 'Read condition resources for the current patient (api:fhir)'
            patient/Coverage.read: 'Read coverage resources for the current patient (api:fhir)'
            patient/Device.read: 'Read device resources for the current patient (api:fhir)'
            patient/DiagnosticReport.read: 'Read diagnostic report resources for the current patient (api:fhir)'
            patient/DocumentReference.read: 'Read document reference resources for the current patient (api:fhir)'
            patient/DocumentReference.$docref: 'Generate a document for the current patient or returns the most current Clinical Summary of Care Document (CCD)'
            patient/Encounter.read: 'Read encounter resources for the current patient (api:fhir)'
            patient/Goal.read: 'Read goal resources for the current patient (api:fhir)'
            patient/Immunization.read: 'Read immunization resources for the current patient (api:fhir)'
            patient/Location.read: 'Read location resources for the current patient (api:fhir)'
            patient/Medication.read: 'Read medication resources for the current patient (api:fhir)'
            patient/MedicationRequest.read: 'Read medication request resources for the current patient (api:fhir)'
            patient/Observation.read: 'Read observation resources for the current patient (api:fhir)'
            patient/Organization.read: 'Read organization resources for the current patient (api:fhir)'
            patient/Patient.read: 'Read patient resource for the current patient (api:fhir)'
            patient/Person.read: 'Read person resources for the current patient (api:fhir)'
            patient/Practitioner.read: 'Read practitioner resources for the current patient (api:fhir)'
            patient/Procedure.read: 'Read procedure resources for the current patient (api:fhir)'
            patient/Provenance.read: 'Read provenance resources for the current patient (api:fhir)'
            system/AllergyIntolerance.read: 'Read all allergy intolerance resources in the system (api:fhir)'
            system/Binary.read: 'Read all binary document resources in the system (api:fhir)'
            system/CarePlan.read: 'Read all care plan resources in the system (api:fhir)'
            system/CareTeam.read: 'Read all care team resources in the system (api:fhir)'
            system/Condition.read: 'Read all condition resources in the system (api:fhir)'
            system/Coverage.read: 'Read all coverage resources in the system (api:fhir)'
            system/Device.read: 'Read all device resources in the system (api:fhir)'
            system/DiagnosticReport.read: 'Read all diagnostic report resources in the system (api:fhir)'
            system/DocumentReference.read: 'Read all document reference resources in the system (api:fhir)'
            system/DocumentReference.$docref: 'Generate a document for any patient in the system or returns the most current Clinical Summary of Care Document (CCD)'
            system/Encounter.read: 'Read all encounter resources in the system (api:fhir)'
            system/Goal.read: 'Read all goal resources in the system (api:fhir)'
            system/Group.read: 'Read all group resources in the system (api:fhir)'
            system/Immunization.read: 'Read all immunization resources in the system (api:fhir)'
            system/Location.read: 'Read all location resources in the system (api:fhir)'
            system/Medication.read: 'Read all medication resources in the system (api:fhir)'
            system/MedicationRequest.read: 'Read all medication request resources in the system (api:fhir)'
            system/Observation.read: 'Read all observation resources in the system (api:fhir)'
            system/Organization.read: 'Read all organization resources in the system (api:fhir)'
            system/Patient.read: 'Read all patient resources in the system (api:fhir)'
            system/Person.read: 'Read all person resources in the system (api:fhir)'
            system/Practitioner.read: 'Read all practitioner resources in the system (api:fhir)'
            system/PractitionerRole.read: 'Read all practitioner role resources in the system (api:fhir)'
            system/Procedure.read: 'Read all procedure resources in the system (api:fhir)'
            system/Provenance.read: 'Read all provenance resources in the system (api:fhir)'
            system/ValueSet.read: 'Read all valueSet resources in the system (api:fhir)'
            user/AllergyIntolerance.read: 'Read all allergy intolerance resources the user has access to (api:fhir)'
            user/Binary.read: 'Read all binary documents the user has access to (api:fhir)'
            user/CarePlan.read: 'Read all care plan resources the user has access to (api:fhir)'
            user/CareTeam.read: 'Read all care team resources the user has access to (api:fhir)'
            user/Condition.read: 'Read all condition resources the user has access to (api:fhir)'
            user/Coverage.read: 'Read all coverage resources the user has access to (api:fhir)'
            user/Device.read: 'Read all device resources the user has access to (api:fhir)'
            user/DiagnosticReport.read: 'Read all diagnostic report resources the user has access to (api:fhir)'
            user/DocumentReference.read: 'Read all document reference resources the user has access to (api:fhir)'
            user/DocumentReference.$docref: 'Generate a document for any patient the user has access to or returns the most current Clinical Summary of Care Document (CCD) (api:fhir)'
            user/Encounter.read: 'Read all encounter resources the user has access to (api:fhir)'
            user/Goal.read: 'Read all goal resources the user has access to (api:fhir)'
            user/Immunization.read: 'Read all immunization resources the user has access to (api:fhir)'
            user/Location.read: 'Read all location resources the user has access to (api:fhir)'
            user/Medication.read: 'Read all medication resources the user has access to (api:fhir)'
            user/MedicationRequest.read: 'Read all medication request resources the user has access to (api:fhir)'
            user/Observation.read: 'Read all observation resources the user has access to (api:fhir)'
            user/Organization.read: 'Read all organization resources the user has access to (api:fhir)'
            user/Organization.write: 'Write all organization resources the user has access to (api:fhir)'
            user/Patient.read: 'Read all patient resources the user has access to (api:fhir)'
            user/Patient.write: 'Write all patient resources the user has access to (api:fhir)'
            user/Person.read: 'Read all person resources the user has access to (api:fhir)'
            user/Practitioner.read: 'Read all practitioner resources the user has access to (api:fhir)'
            user/Practitioner.write: 'Write all practitioner resources the user has access to (api:fhir)'
            user/PractitionerRole.read: 'Read all practitioner role resources the user has access to (api:fhir)'
            user/Procedure.read: 'Read all procedure resources the user has access to (api:fhir)'
            user/Provenance.read: 'Read all provenance resources the user has access to (api:fhir)'
            user/ValueSet.read: 'Read all valueSet resources the user has access to (api:fhir)'
            'api:oemr': 'Standard OpenEMR API'
            user/allergy.read: 'Read allergies the user has access to (api:oemr)'
            user/allergy.write: 'Write allergies the user has access to for (api:oemr)'
            user/appointment.read: 'Read appointments the user has access to (api:oemr)'
            user/appointment.write: 'Write appointments the user has access to for (api:oemr)'
            user/dental_issue.read: 'Read dental issues the user has access to (api:oemr)'
            user/dental_issue.write: 'Write dental issues the user has access to (api:oemr)'
            user/document.read: 'Read documents the user has access to (api:oemr)'
            user/document.write: 'Write documents the user has access to (api:oemr)'
            user/drug.read: 'Read drugs the user has access to (api:oemr)'
            user/encounter.read: 'Read encounters the user has access to (api:oemr)'
            user/encounter.write: 'Write encounters the user has access to (api:oemr)'
            user/facility.read: 'Read facilities the user has access to (api:oemr)'
            user/facility.write: 'Write facilities the user has access to (api:oemr)'
            user/immunization.read: 'Read immunizations the user has access to (api:oemr)'
            user/insurance.read: 'Read insurances the user has access to (api:oemr)'
            user/insurance.write: 'Write insurances the user has access to (api:oemr)'
            user/insurance_company.read: 'Read insurance companies the user has access to (api:oemr)'
            user/insurance_company.write: 'Write insurance companies the user has access to (api:oemr)'
            user/insurance_type.read: 'Read insurance types the user has access to (api:oemr)'
            user/list.read: 'Read lists the user has access to (api:oemr)'
            user/medical_problem.read: 'Read medical problems the user has access to (api:oemr)'
            user/medical_problem.write: 'Write medical problems the user has access to (api:oemr)'
            user/medication.read: 'Read medications the user has access to (api:oemr)'
            user/medication.write: 'Write medications the user has access to (api:oemr)'
            user/message.write: 'Read messages the user has access to (api:oemr)'
            user/patient.read: 'Read patients the user has access to (api:oemr)'
            user/patient.write: 'Write patients the user has access to (api:oemr)'
            user/practitioner.read: 'Read practitioners the user has access to (api:oemr)'
            user/practitioner.write: 'Write practitioners the user has access to (api:oemr)'
            user/prescription.read: 'Read prescriptions the user has access to (api:oemr)'
            user/procedure.read: 'Read procedures the user has access to (api:oemr)'
            user/soap_note.read: 'Read soap notes the user has access to (api:oemr)'
            user/soap_note.write: 'Write soap notes the user has access to (api:oemr)'
            user/surgery.read: 'Read surgeries the user has access to (api:oemr)'
            user/surgery.write: 'Write surgeries the user has access to (api:oemr)'
            user/therapy_groups.read: 'Read therapy groups the user has access to (api:oemr)'
            user/therapy_groups.write: 'Write therapy groups the user has access to (api:oemr)'
            user/transaction.read: 'Read transactions the user has access to (api:oemr)'
            user/transaction.write: 'Write transactions the user has access to (api:oemr)'
            user/user.read: 'Read users the current user has access to (api:oemr)'
            user/vital.read: 'Read vitals the user has access to (api:oemr)'
            user/vital.write: 'Write vitals the user has access to (api:oemr)'
            'api:port': 'Standard Patient Portal OpenEMR API'
            patient/encounter.read: 'Read encounters the patient has access to (api:port)'
            patient/patient.read: 'Write encounters the patient has access to (api:port)'
            patient/appointment.read: 'Read appointments the patient has access to (api:port)'
tags:
  -
    name: fhir
    description: 'FHIR R4 API'
  -
    name: standard
    description: 'Standard OpenEMR API'
  -
    name: standard-patient
    description: 'Standard Patient Portal OpenEMR API'
